(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./dist/src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/src/http-api/index.js":
/*!************************************!*\
  !*** ./dist/src/http-api/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst express = __webpack_require__(/*! express */ \"express\");\r\nconst cors = __webpack_require__(/*! cors */ \"./node_modules/cors/lib/index.js\");\r\nconst events_1 = __webpack_require__(/*! events */ \"events\");\r\n// Сообщения в случае ошибок\r\nconst WRONG_FORMAT = \"WRONG_FORMAT\";\r\nconst SYSTEM_ERROR = \"SYSTEM_ERROR\";\r\nconst UNKNOWN_TAG = \"UNKNOWN_TAG\";\r\nconst WRONG_TOKEN = \"WRONG_TOKEN\";\r\nconst BIG_DATA = \"BIG_DATA\";\r\nclass HttpServer extends events_1.EventEmitter {\r\n    constructor(config, app) {\r\n        super();\r\n        this.config = config;\r\n        this.app = app;\r\n        this.httpServer();\r\n    }\r\n    httpServer() {\r\n        this.app.get(\"*\", (req, res) => {\r\n            res.send('Server is working. Please post at \"/login\" to submit a message.');\r\n        });\r\n        this.app.post(\"/login\", (req, res) => {\r\n            return resultOk(res, { sessionId: req.sessionID });\r\n        });\r\n        this.app.post(\"*\", (req, res) => {\r\n            return error(res, 400, WRONG_FORMAT);\r\n        });\r\n        this.app.listen(this.config.httpPort, () => {\r\n            console.log(\"\\x1b[36m\", `Server is listening on ${this.config.httpPort}\\n`);\r\n            console.log(\"\\x1b[37m\", \"\");\r\n        });\r\n    }\r\n}\r\nexports.HttpServer = HttpServer;\r\nfunction error(res, statusCode, errMsg) {\r\n    res.status(statusCode);\r\n    res.send(JSON.stringify({ status: \"error\", error: errMsg }));\r\n}\r\nfunction resultOk(res, data) {\r\n    res.status(200);\r\n    res.send(JSON.stringify({ status: \"ok\", data }));\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/src/http-api/index.js?");

/***/ }),

/***/ "./dist/src/index.js":
/*!***************************!*\
  !*** ./dist/src/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = __webpack_require__(/*! path */ \"path\");\r\nconst read_config_1 = __webpack_require__(/*! ./read-config */ \"./dist/src/read-config/index.js\");\r\nconst ws_api_1 = __webpack_require__(/*! ./ws-api */ \"./dist/src/ws-api/index.js\");\r\nconst middlewares_1 = __webpack_require__(/*! ./middlewares */ \"./dist/src/middlewares/index.js\");\r\nconst http_api_1 = __webpack_require__(/*! ./http-api */ \"./dist/src/http-api/index.js\");\r\nlet config;\r\ntry {\r\n    config = read_config_1.readConfig(path_1.join(__dirname, \"/config.json\"));\r\n}\r\ncatch (e) {\r\n    console.log(e.stack);\r\n    process.exit(1);\r\n}\r\nconst middleWares = new middlewares_1.MiddleWares(config);\r\nconst wsProcessor = new ws_api_1.WSSocketProcessor(config);\r\nconst httpServer = new http_api_1.HttpServer(config, middleWares._app);\r\n\n\n//# sourceURL=webpack:///./dist/src/index.js?");

/***/ }),

/***/ "./dist/src/middlewares/index.js":
/*!***************************************!*\
  !*** ./dist/src/middlewares/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst express = __webpack_require__(/*! express */ \"express\");\r\nconst session = __webpack_require__(/*! express-session */ \"./node_modules/express-session/index.js\");\r\nconst cors = __webpack_require__(/*! cors */ \"./node_modules/cors/lib/index.js\");\r\nconst RedisStore = __webpack_require__(/*! connect-redis */ \"./node_modules/connect-redis/index.js\")(session);\r\nconst redis_1 = __webpack_require__(/*! redis */ \"./node_modules/redis/index.js\");\r\nconst events_1 = __webpack_require__(/*! events */ \"events\");\r\nclass MiddleWares extends events_1.EventEmitter {\r\n    constructor(config) {\r\n        super();\r\n        this.config = config;\r\n        try {\r\n            this.redisClient = redis_1.createClient(this.config.redisPort, this.config.host);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Please, start redis server\");\r\n        }\r\n        this.app = express();\r\n        (() => __awaiter(this, void 0, void 0, function* () {\r\n            yield this.configApp();\r\n            this.initConnection();\r\n        }))();\r\n    }\r\n    get _app() {\r\n        return this.app;\r\n    }\r\n    configApp() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.app.use(cors());\r\n            const sessionStore = new RedisStore({ host: this.config.host, port: this.config.redisPort, client: this.redisClient });\r\n            this.app.use(new session({\r\n                secret: \"kqsdjfmlksdhfhzirzeoibrzecrbzuzefcuercazeafxzeokwdfzeijfxcerig\",\r\n                store: sessionStore,\r\n                resave: true,\r\n                saveUninitialized: true\r\n            }));\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n    initConnection() {\r\n        this.redisClient.on(\"connect\", () => {\r\n            console.log(\"Connected to redis\");\r\n        });\r\n        this.redisClient.on(\"error\", (err) => {\r\n            console.log(\"Redis error encountered\\n\", err.stack);\r\n            process.exit();\r\n        });\r\n        this.redisClient.on(\"end\", () => {\r\n            console.log(\"Redis connection closed\");\r\n        });\r\n    }\r\n}\r\nexports.MiddleWares = MiddleWares;\r\n\n\n//# sourceURL=webpack:///./dist/src/middlewares/index.js?");

/***/ }),

/***/ "./dist/src/read-config/index.js":
/*!***************************************!*\
  !*** ./dist/src/read-config/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// читает конфиг модуля из config.json\r\nconst fs = __webpack_require__(/*! fs */ \"fs\");\r\nconst arguard = __webpack_require__(/*! arguard */ \"./node_modules/arguard/index.js\");\r\nfunction readConfig(path) {\r\n    const data = fs.readFileSync(path);\r\n    const conf = JSON.parse(data);\r\n    arguard.object(conf, \"config\");\r\n    arguard.number(conf.httpPort, \"config.httpPort\").positive();\r\n    arguard.number(conf.wsPort, \"config.wsPort\").positive();\r\n    arguard.number(conf.redisPort, \"config.redisPort\").positive();\r\n    arguard.string(conf.host, \"config.host\").nonempty();\r\n    return conf;\r\n}\r\nexports.readConfig = readConfig;\r\n\n\n//# sourceURL=webpack:///./dist/src/read-config/index.js?");

/***/ }),

/***/ "./dist/src/ws-api/index.js":
/*!**********************************!*\
  !*** ./dist/src/ws-api/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ws_1 = __webpack_require__(/*! ws */ \"ws\");\r\nconst events_1 = __webpack_require__(/*! events */ \"events\");\r\nclass WSSocketProcessor extends events_1.EventEmitter {\r\n    constructor(conf) {\r\n        super();\r\n        this.conf = conf;\r\n        this.wss = new ws_1.Server({ port: conf.wsPort });\r\n    }\r\n    initializeConnect() {\r\n        return new Promise((resolve, reject) => {\r\n            // const sid = signedCookie(cookie.parse(this.wss.listenerCount)connect.sid\"], \"$eCuRiTy\");\r\n            // console.info(\"sid -> \", sid);\r\n            resolve(this.wss.listenerCount);\r\n        });\r\n    }\r\n    closeConnection() {\r\n        this.wss.removeAllListeners();\r\n        this.wss.close();\r\n    }\r\n}\r\nexports.WSSocketProcessor = WSSocketProcessor;\r\n\n\n//# sourceURL=webpack:///./dist/src/ws-api/index.js?");

/***/ }),

/***/ "./node_modules/arguard/index.js":
/*!***************************************!*\
  !*** ./node_modules/arguard/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar BOOLEAN = 'boolean';\nvar OBJECT = 'object';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar FUNCTION = 'function';\nvar UNDEFINED = 'undefined';\nvar MUST_BE = ' must be';\nvar PARAM_NAME = 'paramName';\n\nmodule.exports.bool = _bool;\nfunction _bool(param, paramName) {\n    _string(paramName, PARAM_NAME);\n    if (typeof param !== BOOLEAN) {\n        throw new Error(paramName + MUST_BE + ' a ' + BOOLEAN);\n    }\n}\n\nmodule.exports.func = _func;\nfunction _func (param, paramName) {\n    _string(paramName, PARAM_NAME);\n    if (typeof param !== FUNCTION) {\n        throw new Error(paramName + MUST_BE + ' a ' + FUNCTION);\n    }\n}\n\nmodule.exports.object = _object;\nfunction _object (param, paramName) {\n    _string(paramName, PARAM_NAME);\n    if (typeof param !== OBJECT || !param) {\n        throw new Error(paramName + MUST_BE + ' an ' + OBJECT);\n    }\n}\n\nmodule.exports.array = _array;\nfunction _array (param, paramName) {\n    _string(paramName, PARAM_NAME);\n    if (!Array.isArray(param)) {\n        throw new Error(paramName + MUST_BE + ' an array');\n    }\n}\n\nmodule.exports.number = _number;\nfunction _number (param, paramName) {\n    _string(paramName, PARAM_NAME);\n    if (typeof param !== NUMBER || Number.isNaN(param)) {\n        throw new Error(paramName + MUST_BE + ' a ' + NUMBER);\n    }\n    return {\n        positive: function(){\n            if (param <= 0) {\n                throw new Error(paramName + MUST_BE + ' a positive ' + NUMBER);\n            }\n        }\n    };\n}\n\nmodule.exports.string = _string;\nfunction _string (param, paramName) {\n    if (typeof paramName !== STRING){\n        throw new Error(PARAM_NAME + MUST_BE + ' a ' + STRING);\n    }\n    if (typeof param !== STRING) {\n        throw new Error(paramName + MUST_BE + ' a ' + STRING);\n    }\n    return {\n        oneOf: function(arr){\n            _array(arr, '.oneOf() argument');\n            if (arr.length === 0){\n                throw new Error('empty array passed to .oneOf()');\n            }\n            for (var i = 0; i < arr.length; i++){\n                _string(arr[i], '.oneOf()[' + i + ']');\n                if (arr[i] === param){\n                    return;\n                }\n            }\n            throw new Error(paramName + MUST_BE + ' one of ' + JSON.stringify(arr));\n        },\n        nonempty: function(){\n            if (param === ''){\n                throw new Error(paramName + ' must not be empty');\n            }\n        }\n    };\n}\n\nfunction emptyFunc(){\n    return;\n}\n\n//fequently used arg names\nmodule.exports.names = {\n    params: 'params',\n    options: 'options',\n    cb: 'cb',\n};\n\n//allow undefined\nmodule.exports.maybe = {\n    number: function(param, paramName){\n        _string(paramName, PARAM_NAME);\n        if (typeof param === UNDEFINED){\n            return { positive: emptyFunc };\n        }\n        return _number(param, paramName);\n    },\n    string: function(param, paramName){\n        _string(paramName, PARAM_NAME);\n        if (typeof param === UNDEFINED){\n            return { oneOf: emptyFunc, nonempty: emptyFunc };\n        }\n        return _string(param, paramName);\n    },\n    func: function(param, paramName){\n        _string(paramName, PARAM_NAME);\n        if (typeof param !== UNDEFINED){\n            _func(param, paramName);\n        }\n    },\n    bool: function(param, paramName){\n        _string(paramName, PARAM_NAME);\n        if (typeof param !== UNDEFINED){\n            _bool(param, paramName);\n        }\n    },\n};\n\n//# sourceURL=webpack:///./node_modules/arguard/index.js?");

/***/ }),

/***/ "./node_modules/bindings/bindings.js":
/*!*******************************************!*\
  !*** ./node_modules/bindings/bindings.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar fs = __webpack_require__(/*! fs */ \"fs\"),\n  path = __webpack_require__(/*! path */ \"path\"),\n  fileURLToPath = __webpack_require__(/*! file-uri-to-path */ \"./node_modules/file-uri-to-path/index.js\"),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' → ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n     true\n      ? require\n      : undefined;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/bindings/bindings.js?");

/***/ }),

/***/ "./node_modules/connect-redis/index.js":
/*!*********************************************!*\
  !*** ./node_modules/connect-redis/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/connect-redis */ \"./node_modules/connect-redis/lib/connect-redis.js\")\n\n\n//# sourceURL=webpack:///./node_modules/connect-redis/index.js?");

/***/ }),

/***/ "./node_modules/connect-redis/lib/connect-redis.js":
/*!*********************************************************!*\
  !*** ./node_modules/connect-redis/lib/connect-redis.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Connect - Redis\n * Copyright(c) 2012 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\nmodule.exports = function(session) {\n  const Store = session.Store\n\n  // All callbacks should have a noop if none provided for compatibility\n  // with the most Redis clients.\n  const noop = () => {}\n\n  class RedisStore extends Store {\n    constructor(options = {}) {\n      super(options)\n      if (!options.client) {\n        throw new Error('A client must be directly provided to the RedisStore')\n      }\n\n      this.prefix = options.prefix == null ? 'sess:' : options.prefix\n      this.scanCount = Number(options.scanCount) || 100\n      this.serializer = options.serializer || JSON\n      this.client = options.client\n      this.ttl = options.ttl || 86400 // One day in seconds.\n      this.disableTouch = options.disableTouch || false\n    }\n\n    get(sid, cb = noop) {\n      let key = this.prefix + sid\n\n      this.client.get(key, (er, data) => {\n        if (er) return cb(er)\n        if (!data) return cb()\n\n        let result\n        try {\n          result = this.serializer.parse(data)\n        } catch (er) {\n          return cb(er)\n        }\n        return cb(null, result)\n      })\n    }\n\n    set(sid, sess, cb = noop) {\n      let args = [this.prefix + sid]\n\n      let value\n      try {\n        value = this.serializer.stringify(sess)\n      } catch (er) {\n        return cb(er)\n      }\n      args.push(value)\n      args.push('EX', this._getTTL(sess))\n\n      this.client.set(args, cb)\n    }\n\n    touch(sid, sess, cb = noop) {\n      if (this.disableTouch) return cb()\n\n      // Since we need to update the expires value on the cookie,\n      // we update the whole session object.\n      this.set(sid, sess, cb)\n    }\n\n    destroy(sid, cb = noop) {\n      let key = this.prefix + sid\n      this.client.del(key, cb)\n    }\n\n    clear(cb = noop) {\n      this._getAllKeys((err, keys) => {\n        if (err) return cb(err)\n        this.client.del(keys, cb)\n      })\n    }\n\n    length(cb = noop) {\n      this._getAllKeys((err, keys) => {\n        if (err) return cb(err)\n        return cb(null, keys.length)\n      })\n    }\n\n    ids(cb = noop) {\n      let prefixLen = this.prefix.length\n\n      this._getAllKeys((err, keys) => {\n        if (err) return cb(err)\n        keys = keys.map(key => key.substr(prefixLen))\n        return cb(null, keys)\n      })\n    }\n\n    all(cb = noop) {\n      let prefixLen = this.prefix.length\n\n      this._getAllKeys((err, keys) => {\n        if (err) return cb(err)\n        if (keys.length === 0) return cb(null, [])\n\n        this.client.mget(keys, (err, sessions) => {\n          if (err) return cb(err)\n\n          let result\n          try {\n            result = sessions.map((data, index) => {\n              data = this.serializer.parse(data)\n              data.id = keys[index].substr(prefixLen)\n              return data\n            })\n          } catch (e) {\n            err = e\n          }\n          return cb(err, result)\n        })\n      })\n    }\n\n    _getTTL(sess) {\n      let ttl\n      if (sess && sess.cookie && sess.cookie.expires) {\n        let ms = Number(new Date(sess.cookie.expires)) - Date.now()\n        ttl = Math.ceil(ms / 1000)\n      } else {\n        ttl = this.ttl\n      }\n      return ttl\n    }\n\n    _getAllKeys(cb = noop) {\n      let pattern = this.prefix + '*'\n      this._scanKeys({}, 0, pattern, this.scanCount, cb)\n    }\n\n    _scanKeys(keys = {}, cursor, pattern, count, cb = noop) {\n      let args = [cursor, 'match', pattern, 'count', count]\n      this.client.scan(args, (err, data) => {\n        if (err) return cb(err)\n\n        let [nextCursorId, scanKeys] = data\n        for (let key of scanKeys) {\n          keys[key] = true\n        }\n\n        // This can be a string or a number. We check both.\n        if (Number(nextCursorId) !== 0) {\n          return this._scanKeys(keys, nextCursorId, pattern, count, cb)\n        }\n\n        cb(null, Object.keys(keys))\n      })\n    }\n  }\n\n  return RedisStore\n}\n\n\n//# sourceURL=webpack:///./node_modules/connect-redis/lib/connect-redis.js?");

/***/ }),

/***/ "./node_modules/cookie-signature/index.js":
/*!************************************************!*\
  !*** ./node_modules/cookie-signature/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n\n\n//# sourceURL=webpack:///./node_modules/cookie-signature/index.js?");

/***/ }),

/***/ "./node_modules/cors/lib/index.js":
/*!****************************************!*\
  !*** ./node_modules/cors/lib/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function () {\n\n  'use strict';\n\n  var assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n  var vary = __webpack_require__(/*! vary */ \"./node_modules/vary/index.js\");\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n\n\n//# sourceURL=webpack:///./node_modules/cors/lib/index.js?");

/***/ }),

/***/ "./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/debug/src/debug.js":
/*!*****************************************!*\
  !*** ./node_modules/debug/src/debug.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/debug.js?");

/***/ }),

/***/ "./node_modules/debug/src/index.js":
/*!*****************************************!*\
  !*** ./node_modules/debug/src/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = __webpack_require__(/*! ./browser.js */ \"./node_modules/debug/src/browser.js\");\n} else {\n  module.exports = __webpack_require__(/*! ./node.js */ \"./node_modules/debug/src/node.js\");\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/index.js?");

/***/ }),

/***/ "./node_modules/debug/src/node.js":
/*!****************************************!*\
  !*** ./node_modules/debug/src/node.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar tty = __webpack_require__(/*! tty */ \"tty\");\nvar util = __webpack_require__(/*! util */ \"util\");\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/debug/src/debug.js\");\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = __webpack_require__(/*! fs */ \"fs\");\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = __webpack_require__(/*! net */ \"net\");\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/node.js?");

/***/ }),

/***/ "./node_modules/double-ended-queue/js/deque.js":
/*!*****************************************************!*\
  !*** ./node_modules/double-ended-queue/js/deque.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nfunction Deque(capacity) {\n    this._capacity = getCapacity(capacity);\n    this._length = 0;\n    this._front = 0;\n    if (isArray(capacity)) {\n        var len = capacity.length;\n        for (var i = 0; i < len; ++i) {\n            this[i] = capacity[i];\n        }\n        this._length = len;\n    }\n}\n\nDeque.prototype.toArray = function Deque$toArray() {\n    var len = this._length;\n    var ret = new Array(len);\n    var front = this._front;\n    var capacity = this._capacity;\n    for (var j = 0; j < len; ++j) {\n        ret[j] = this[(front + j) & (capacity - 1)];\n    }\n    return ret;\n};\n\nDeque.prototype.push = function Deque$push(item) {\n    var argsLength = arguments.length;\n    var length = this._length;\n    if (argsLength > 1) {\n        var capacity = this._capacity;\n        if (length + argsLength > capacity) {\n            for (var i = 0; i < argsLength; ++i) {\n                this._checkCapacity(length + 1);\n                var j = (this._front + length) & (this._capacity - 1);\n                this[j] = arguments[i];\n                length++;\n                this._length = length;\n            }\n            return length;\n        }\n        else {\n            var j = this._front;\n            for (var i = 0; i < argsLength; ++i) {\n                this[(j + length) & (capacity - 1)] = arguments[i];\n                j++;\n            }\n            this._length = length + argsLength;\n            return length + argsLength;\n        }\n\n    }\n\n    if (argsLength === 0) return length;\n\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = item;\n    this._length = length + 1;\n    return length + 1;\n};\n\nDeque.prototype.pop = function Deque$pop() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var i = (this._front + length - 1) & (this._capacity - 1);\n    var ret = this[i];\n    this[i] = void 0;\n    this._length = length - 1;\n    return ret;\n};\n\nDeque.prototype.shift = function Deque$shift() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var front = this._front;\n    var ret = this[front];\n    this[front] = void 0;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length = length - 1;\n    return ret;\n};\n\nDeque.prototype.unshift = function Deque$unshift(item) {\n    var length = this._length;\n    var argsLength = arguments.length;\n\n\n    if (argsLength > 1) {\n        var capacity = this._capacity;\n        if (length + argsLength > capacity) {\n            for (var i = argsLength - 1; i >= 0; i--) {\n                this._checkCapacity(length + 1);\n                var capacity = this._capacity;\n                var j = (((( this._front - 1 ) &\n                    ( capacity - 1) ) ^ capacity ) - capacity );\n                this[j] = arguments[i];\n                length++;\n                this._length = length;\n                this._front = j;\n            }\n            return length;\n        }\n        else {\n            var front = this._front;\n            for (var i = argsLength - 1; i >= 0; i--) {\n                var j = (((( front - 1 ) &\n                    ( capacity - 1) ) ^ capacity ) - capacity );\n                this[j] = arguments[i];\n                front = j;\n            }\n            this._front = front;\n            this._length = length + argsLength;\n            return length + argsLength;\n        }\n    }\n\n    if (argsLength === 0) return length;\n\n    this._checkCapacity(length + 1);\n    var capacity = this._capacity;\n    var i = (((( this._front - 1 ) &\n        ( capacity - 1) ) ^ capacity ) - capacity );\n    this[i] = item;\n    this._length = length + 1;\n    this._front = i;\n    return length + 1;\n};\n\nDeque.prototype.peekBack = function Deque$peekBack() {\n    var length = this._length;\n    if (length === 0) {\n        return void 0;\n    }\n    var index = (this._front + length - 1) & (this._capacity - 1);\n    return this[index];\n};\n\nDeque.prototype.peekFront = function Deque$peekFront() {\n    if (this._length === 0) {\n        return void 0;\n    }\n    return this[this._front];\n};\n\nDeque.prototype.get = function Deque$get(index) {\n    var i = index;\n    if ((i !== (i | 0))) {\n        return void 0;\n    }\n    var len = this._length;\n    if (i < 0) {\n        i = i + len;\n    }\n    if (i < 0 || i >= len) {\n        return void 0;\n    }\n    return this[(this._front + i) & (this._capacity - 1)];\n};\n\nDeque.prototype.isEmpty = function Deque$isEmpty() {\n    return this._length === 0;\n};\n\nDeque.prototype.clear = function Deque$clear() {\n    var len = this._length;\n    var front = this._front;\n    var capacity = this._capacity;\n    for (var j = 0; j < len; ++j) {\n        this[(front + j) & (capacity - 1)] = void 0;\n    }\n    this._length = 0;\n    this._front = 0;\n};\n\nDeque.prototype.toString = function Deque$toString() {\n    return this.toArray().toString();\n};\n\nDeque.prototype.valueOf = Deque.prototype.toString;\nDeque.prototype.removeFront = Deque.prototype.shift;\nDeque.prototype.removeBack = Deque.prototype.pop;\nDeque.prototype.insertFront = Deque.prototype.unshift;\nDeque.prototype.insertBack = Deque.prototype.push;\nDeque.prototype.enqueue = Deque.prototype.push;\nDeque.prototype.dequeue = Deque.prototype.shift;\nDeque.prototype.toJSON = Deque.prototype.toArray;\n\nObject.defineProperty(Deque.prototype, \"length\", {\n    get: function() {\n        return this._length;\n    },\n    set: function() {\n        throw new RangeError(\"\");\n    }\n});\n\nDeque.prototype._checkCapacity = function Deque$_checkCapacity(size) {\n    if (this._capacity < size) {\n        this._resizeTo(getCapacity(this._capacity * 1.5 + 16));\n    }\n};\n\nDeque.prototype._resizeTo = function Deque$_resizeTo(capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    if (front + length > oldCapacity) {\n        var moveItemsCount = (front + length) & (oldCapacity - 1);\n        arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n    }\n};\n\n\nvar isArray = Array.isArray;\n\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction pow2AtLeast(n) {\n    n = n >>> 0;\n    n = n - 1;\n    n = n | (n >> 1);\n    n = n | (n >> 2);\n    n = n | (n >> 4);\n    n = n | (n >> 8);\n    n = n | (n >> 16);\n    return n + 1;\n}\n\nfunction getCapacity(capacity) {\n    if (typeof capacity !== \"number\") {\n        if (isArray(capacity)) {\n            capacity = capacity.length;\n        }\n        else {\n            return 16;\n        }\n    }\n    return pow2AtLeast(\n        Math.min(\n            Math.max(16, capacity), 1073741824)\n    );\n}\n\nmodule.exports = Deque;\n\n\n//# sourceURL=webpack:///./node_modules/double-ended-queue/js/deque.js?");

/***/ }),

/***/ "./node_modules/express-session/index.js":
/*!***********************************************!*\
  !*** ./node_modules/express-session/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * express-session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer\nvar cookie = __webpack_require__(/*! cookie */ \"./node_modules/express-session/node_modules/cookie/index.js\");\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\")\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/index.js\")('express-session');\nvar deprecate = __webpack_require__(/*! depd */ \"./node_modules/express-session/node_modules/depd/index.js\")('express-session');\nvar onHeaders = __webpack_require__(/*! on-headers */ \"./node_modules/on-headers/index.js\")\nvar parseUrl = __webpack_require__(/*! parseurl */ \"./node_modules/parseurl/index.js\");\nvar signature = __webpack_require__(/*! cookie-signature */ \"./node_modules/cookie-signature/index.js\")\nvar uid = __webpack_require__(/*! uid-safe */ \"./node_modules/uid-safe/index.js\").sync\n\nvar Cookie = __webpack_require__(/*! ./session/cookie */ \"./node_modules/express-session/session/cookie.js\")\nvar MemoryStore = __webpack_require__(/*! ./session/memory */ \"./node_modules/express-session/session/memory.js\")\nvar Session = __webpack_require__(/*! ./session/session */ \"./node_modules/express-session/session/session.js\")\nvar Store = __webpack_require__(/*! ./session/store */ \"./node_modules/express-session/session/store.js\")\n\n// environment\n\nvar env = \"development\";\n\n/**\n * Expose the middleware.\n */\n\nexports = module.exports = session;\n\n/**\n * Expose constructors.\n */\n\nexports.Store = Store;\nexports.Cookie = Cookie;\nexports.Session = Session;\nexports.MemoryStore = MemoryStore;\n\n/**\n * Warning message for `MemoryStore` usage in production.\n * @private\n */\n\nvar warning = 'Warning: connect.session() MemoryStore is not\\n'\n  + 'designed for a production environment, as it will leak\\n'\n  + 'memory, and will not scale past a single process.';\n\n/**\n * Node.js 0.8+ async implementation.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Setup session store with the given `options`.\n *\n * @param {Object} [options]\n * @param {Object} [options.cookie] Options for cookie\n * @param {Function} [options.genid]\n * @param {String} [options.name=connect.sid] Session ID cookie name\n * @param {Boolean} [options.proxy]\n * @param {Boolean} [options.resave] Resave unmodified sessions back to the store\n * @param {Boolean} [options.rolling] Enable/disable rolling session expiration\n * @param {Boolean} [options.saveUninitialized] Save uninitialized sessions to the store\n * @param {String|Array} [options.secret] Secret for signing session ID\n * @param {Object} [options.store=MemoryStore] Session store\n * @param {String} [options.unset]\n * @return {Function} middleware\n * @public\n */\n\nfunction session(options) {\n  var opts = options || {}\n\n  // get the cookie options\n  var cookieOptions = opts.cookie || {}\n\n  // get the session id generate function\n  var generateId = opts.genid || generateSessionId\n\n  // get the session cookie name\n  var name = opts.name || opts.key || 'connect.sid'\n\n  // get the session store\n  var store = opts.store || new MemoryStore()\n\n  // get the trust proxy setting\n  var trustProxy = opts.proxy\n\n  // get the resave session option\n  var resaveSession = opts.resave;\n\n  // get the rolling session option\n  var rollingSessions = Boolean(opts.rolling)\n\n  // get the save uninitialized session option\n  var saveUninitializedSession = opts.saveUninitialized\n\n  // get the cookie signing secret\n  var secret = opts.secret\n\n  if (typeof generateId !== 'function') {\n    throw new TypeError('genid option must be a function');\n  }\n\n  if (resaveSession === undefined) {\n    deprecate('undefined resave option; provide resave option');\n    resaveSession = true;\n  }\n\n  if (saveUninitializedSession === undefined) {\n    deprecate('undefined saveUninitialized option; provide saveUninitialized option');\n    saveUninitializedSession = true;\n  }\n\n  if (opts.unset && opts.unset !== 'destroy' && opts.unset !== 'keep') {\n    throw new TypeError('unset option must be \"destroy\" or \"keep\"');\n  }\n\n  // TODO: switch to \"destroy\" on next major\n  var unsetDestroy = opts.unset === 'destroy'\n\n  if (Array.isArray(secret) && secret.length === 0) {\n    throw new TypeError('secret option array must contain one or more strings');\n  }\n\n  if (secret && !Array.isArray(secret)) {\n    secret = [secret];\n  }\n\n  if (!secret) {\n    deprecate('req.secret; provide secret option');\n  }\n\n  // notify user that this store is not\n  // meant for a production environment\n  /* istanbul ignore next: not tested */\n  if (env === 'production' && store instanceof MemoryStore) {\n    console.warn(warning);\n  }\n\n  // generates the new session\n  store.generate = function(req){\n    req.sessionID = generateId(req);\n    req.session = new Session(req);\n    req.session.cookie = new Cookie(cookieOptions);\n\n    if (cookieOptions.secure === 'auto') {\n      req.session.cookie.secure = issecure(req, trustProxy);\n    }\n  };\n\n  var storeImplementsTouch = typeof store.touch === 'function';\n\n  // register event listeners for the store to track readiness\n  var storeReady = true\n  store.on('disconnect', function ondisconnect() {\n    storeReady = false\n  })\n  store.on('connect', function onconnect() {\n    storeReady = true\n  })\n\n  return function session(req, res, next) {\n    // self-awareness\n    if (req.session) {\n      next()\n      return\n    }\n\n    // Handle connection as if there is no session if\n    // the store has temporarily disconnected etc\n    if (!storeReady) {\n      debug('store is disconnected')\n      next()\n      return\n    }\n\n    // pathname mismatch\n    var originalPath = parseUrl.original(req).pathname || '/'\n    if (originalPath.indexOf(cookieOptions.path || '/') !== 0) return next();\n\n    // ensure a secret is available or bail\n    if (!secret && !req.secret) {\n      next(new Error('secret option required for sessions'));\n      return;\n    }\n\n    // backwards compatibility for signed cookies\n    // req.secret is passed from the cookie parser middleware\n    var secrets = secret || [req.secret];\n\n    var originalHash;\n    var originalId;\n    var savedHash;\n    var touched = false\n\n    // expose store\n    req.sessionStore = store;\n\n    // get the session ID from the cookie\n    var cookieId = req.sessionID = getcookie(req, name, secrets);\n\n    // set-cookie\n    onHeaders(res, function(){\n      if (!req.session) {\n        debug('no session');\n        return;\n      }\n\n      if (!shouldSetCookie(req)) {\n        return;\n      }\n\n      // only send secure cookies via https\n      if (req.session.cookie.secure && !issecure(req, trustProxy)) {\n        debug('not secured');\n        return;\n      }\n\n      if (!touched) {\n        // touch session\n        req.session.touch()\n        touched = true\n      }\n\n      // set cookie\n      setcookie(res, name, req.sessionID, secrets[0], req.session.cookie.data);\n    });\n\n    // proxy end() to commit the session\n    var _end = res.end;\n    var _write = res.write;\n    var ended = false;\n    res.end = function end(chunk, encoding) {\n      if (ended) {\n        return false;\n      }\n\n      ended = true;\n\n      var ret;\n      var sync = true;\n\n      function writeend() {\n        if (sync) {\n          ret = _end.call(res, chunk, encoding);\n          sync = false;\n          return;\n        }\n\n        _end.call(res);\n      }\n\n      function writetop() {\n        if (!sync) {\n          return ret;\n        }\n\n        if (chunk == null) {\n          ret = true;\n          return ret;\n        }\n\n        var contentLength = Number(res.getHeader('Content-Length'));\n\n        if (!isNaN(contentLength) && contentLength > 0) {\n          // measure chunk\n          chunk = !Buffer.isBuffer(chunk)\n            ? Buffer.from(chunk, encoding)\n            : chunk;\n          encoding = undefined;\n\n          if (chunk.length !== 0) {\n            debug('split response');\n            ret = _write.call(res, chunk.slice(0, chunk.length - 1));\n            chunk = chunk.slice(chunk.length - 1, chunk.length);\n            return ret;\n          }\n        }\n\n        ret = _write.call(res, chunk, encoding);\n        sync = false;\n\n        return ret;\n      }\n\n      if (shouldDestroy(req)) {\n        // destroy session\n        debug('destroying');\n        store.destroy(req.sessionID, function ondestroy(err) {\n          if (err) {\n            defer(next, err);\n          }\n\n          debug('destroyed');\n          writeend();\n        });\n\n        return writetop();\n      }\n\n      // no session to save\n      if (!req.session) {\n        debug('no session');\n        return _end.call(res, chunk, encoding);\n      }\n\n      if (!touched) {\n        // touch session\n        req.session.touch()\n        touched = true\n      }\n\n      if (shouldSave(req)) {\n        req.session.save(function onsave(err) {\n          if (err) {\n            defer(next, err);\n          }\n\n          writeend();\n        });\n\n        return writetop();\n      } else if (storeImplementsTouch && shouldTouch(req)) {\n        // store implements touch method\n        debug('touching');\n        store.touch(req.sessionID, req.session, function ontouch(err) {\n          if (err) {\n            defer(next, err);\n          }\n\n          debug('touched');\n          writeend();\n        });\n\n        return writetop();\n      }\n\n      return _end.call(res, chunk, encoding);\n    };\n\n    // generate the session\n    function generate() {\n      store.generate(req);\n      originalId = req.sessionID;\n      originalHash = hash(req.session);\n      wrapmethods(req.session);\n    }\n\n    // inflate the session\n    function inflate (req, sess) {\n      store.createSession(req, sess)\n      originalId = req.sessionID\n      originalHash = hash(sess)\n\n      if (!resaveSession) {\n        savedHash = originalHash\n      }\n\n      wrapmethods(req.session)\n    }\n\n    // wrap session methods\n    function wrapmethods(sess) {\n      var _reload = sess.reload\n      var _save = sess.save;\n\n      function reload(callback) {\n        debug('reloading %s', this.id)\n        _reload.call(this, function () {\n          wrapmethods(req.session)\n          callback.apply(this, arguments)\n        })\n      }\n\n      function save() {\n        debug('saving %s', this.id);\n        savedHash = hash(this);\n        _save.apply(this, arguments);\n      }\n\n      Object.defineProperty(sess, 'reload', {\n        configurable: true,\n        enumerable: false,\n        value: reload,\n        writable: true\n      })\n\n      Object.defineProperty(sess, 'save', {\n        configurable: true,\n        enumerable: false,\n        value: save,\n        writable: true\n      });\n    }\n\n    // check if session has been modified\n    function isModified(sess) {\n      return originalId !== sess.id || originalHash !== hash(sess);\n    }\n\n    // check if session has been saved\n    function isSaved(sess) {\n      return originalId === sess.id && savedHash === hash(sess);\n    }\n\n    // determine if session should be destroyed\n    function shouldDestroy(req) {\n      return req.sessionID && unsetDestroy && req.session == null;\n    }\n\n    // determine if session should be saved to store\n    function shouldSave(req) {\n      // cannot set cookie without a session ID\n      if (typeof req.sessionID !== 'string') {\n        debug('session ignored because of bogus req.sessionID %o', req.sessionID);\n        return false;\n      }\n\n      return !saveUninitializedSession && cookieId !== req.sessionID\n        ? isModified(req.session)\n        : !isSaved(req.session)\n    }\n\n    // determine if session should be touched\n    function shouldTouch(req) {\n      // cannot set cookie without a session ID\n      if (typeof req.sessionID !== 'string') {\n        debug('session ignored because of bogus req.sessionID %o', req.sessionID);\n        return false;\n      }\n\n      return cookieId === req.sessionID && !shouldSave(req);\n    }\n\n    // determine if cookie should be set on response\n    function shouldSetCookie(req) {\n      // cannot set cookie without a session ID\n      if (typeof req.sessionID !== 'string') {\n        return false;\n      }\n\n      return cookieId !== req.sessionID\n        ? saveUninitializedSession || isModified(req.session)\n        : rollingSessions || req.session.cookie.expires != null && isModified(req.session);\n    }\n\n    // generate a session if the browser doesn't send a sessionID\n    if (!req.sessionID) {\n      debug('no SID sent, generating session');\n      generate();\n      next();\n      return;\n    }\n\n    // generate the session object\n    debug('fetching %s', req.sessionID);\n    store.get(req.sessionID, function(err, sess){\n      // error handling\n      if (err && err.code !== 'ENOENT') {\n        debug('error %j', err);\n        next(err)\n        return\n      }\n\n      try {\n        if (err || !sess) {\n          debug('no session found')\n          generate()\n        } else {\n          debug('session found')\n          inflate(req, sess)\n        }\n      } catch (e) {\n        next(e)\n        return\n      }\n\n      next()\n    });\n  };\n};\n\n/**\n * Generate a session ID for a new session.\n *\n * @return {String}\n * @private\n */\n\nfunction generateSessionId(sess) {\n  return uid(24);\n}\n\n/**\n * Get the session ID cookie from request.\n *\n * @return {string}\n * @private\n */\n\nfunction getcookie(req, name, secrets) {\n  var header = req.headers.cookie;\n  var raw;\n  var val;\n\n  // read from cookie header\n  if (header) {\n    var cookies = cookie.parse(header);\n\n    raw = cookies[name];\n\n    if (raw) {\n      if (raw.substr(0, 2) === 's:') {\n        val = unsigncookie(raw.slice(2), secrets);\n\n        if (val === false) {\n          debug('cookie signature invalid');\n          val = undefined;\n        }\n      } else {\n        debug('cookie unsigned')\n      }\n    }\n  }\n\n  // back-compat read from cookieParser() signedCookies data\n  if (!val && req.signedCookies) {\n    val = req.signedCookies[name];\n\n    if (val) {\n      deprecate('cookie should be available in req.headers.cookie');\n    }\n  }\n\n  // back-compat read from cookieParser() cookies data\n  if (!val && req.cookies) {\n    raw = req.cookies[name];\n\n    if (raw) {\n      if (raw.substr(0, 2) === 's:') {\n        val = unsigncookie(raw.slice(2), secrets);\n\n        if (val) {\n          deprecate('cookie should be available in req.headers.cookie');\n        }\n\n        if (val === false) {\n          debug('cookie signature invalid');\n          val = undefined;\n        }\n      } else {\n        debug('cookie unsigned')\n      }\n    }\n  }\n\n  return val;\n}\n\n/**\n * Hash the given `sess` object omitting changes to `.cookie`.\n *\n * @param {Object} sess\n * @return {String}\n * @private\n */\n\nfunction hash(sess) {\n  // serialize\n  var str = JSON.stringify(sess, function (key, val) {\n    // ignore sess.cookie property\n    if (this === sess && key === 'cookie') {\n      return\n    }\n\n    return val\n  })\n\n  // hash\n  return crypto\n    .createHash('sha1')\n    .update(str, 'utf8')\n    .digest('hex')\n}\n\n/**\n * Determine if request is secure.\n *\n * @param {Object} req\n * @param {Boolean} [trustProxy]\n * @return {Boolean}\n * @private\n */\n\nfunction issecure(req, trustProxy) {\n  // socket is https server\n  if (req.connection && req.connection.encrypted) {\n    return true;\n  }\n\n  // do not trust proxy\n  if (trustProxy === false) {\n    return false;\n  }\n\n  // no explicit trust; try req.secure from express\n  if (trustProxy !== true) {\n    return req.secure === true\n  }\n\n  // read the proto from x-forwarded-proto header\n  var header = req.headers['x-forwarded-proto'] || '';\n  var index = header.indexOf(',');\n  var proto = index !== -1\n    ? header.substr(0, index).toLowerCase().trim()\n    : header.toLowerCase().trim()\n\n  return proto === 'https';\n}\n\n/**\n * Set cookie on response.\n *\n * @private\n */\n\nfunction setcookie(res, name, val, secret, options) {\n  var signed = 's:' + signature.sign(val, secret);\n  var data = cookie.serialize(name, signed, options);\n\n  debug('set-cookie %s', data);\n\n  var prev = res.getHeader('Set-Cookie') || []\n  var header = Array.isArray(prev) ? prev.concat(data) : [prev, data];\n\n  res.setHeader('Set-Cookie', header)\n}\n\n/**\n * Verify and decode the given `val` with `secrets`.\n *\n * @param {String} val\n * @param {Array} secrets\n * @returns {String|Boolean}\n * @private\n */\nfunction unsigncookie(val, secrets) {\n  for (var i = 0; i < secrets.length; i++) {\n    var result = signature.unsign(val, secrets[i]);\n\n    if (result !== false) {\n      return result;\n    }\n  }\n\n  return false;\n}\n\n\n//# sourceURL=webpack:///./node_modules/express-session/index.js?");

/***/ }),

/***/ "./node_modules/express-session/node_modules/cookie/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/express-session/node_modules/cookie/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/express-session/node_modules/cookie/index.js?");

/***/ }),

/***/ "./node_modules/express-session/node_modules/depd/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/express-session/node_modules/depd/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = __webpack_require__(/*! path */ \"path\").relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eehaslisteners(process, 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn', 'log', 'deprecate', 'message', 'site',\n    '\"use strict\"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '}')(fn, log, this, message, site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n\n\n//# sourceURL=webpack:///./node_modules/express-session/node_modules/depd/index.js?");

/***/ }),

/***/ "./node_modules/express-session/session/cookie.js":
/*!********************************************************!*\
  !*** ./node_modules/express-session/session/cookie.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * Connect - session - Cookie\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n */\n\nvar cookie = __webpack_require__(/*! cookie */ \"./node_modules/express-session/node_modules/cookie/index.js\")\nvar deprecate = __webpack_require__(/*! depd */ \"./node_modules/express-session/node_modules/depd/index.js\")('express-session')\n\n/**\n * Initialize a new `Cookie` with the given `options`.\n *\n * @param {IncomingMessage} req\n * @param {Object} options\n * @api private\n */\n\nvar Cookie = module.exports = function Cookie(options) {\n  this.path = '/';\n  this.maxAge = null;\n  this.httpOnly = true;\n\n  if (options) {\n    if (typeof options !== 'object') {\n      throw new TypeError('argument options must be a object')\n    }\n\n    for (var key in options) {\n      if (key !== 'data') {\n        this[key] = options[key]\n      }\n    }\n  }\n\n  if (this.originalMaxAge === undefined || this.originalMaxAge === null) {\n    this.originalMaxAge = this.maxAge\n  }\n};\n\n/*!\n * Prototype.\n */\n\nCookie.prototype = {\n\n  /**\n   * Set expires `date`.\n   *\n   * @param {Date} date\n   * @api public\n   */\n\n  set expires(date) {\n    this._expires = date;\n    this.originalMaxAge = this.maxAge;\n  },\n\n  /**\n   * Get expires `date`.\n   *\n   * @return {Date}\n   * @api public\n   */\n\n  get expires() {\n    return this._expires;\n  },\n\n  /**\n   * Set expires via max-age in `ms`.\n   *\n   * @param {Number} ms\n   * @api public\n   */\n\n  set maxAge(ms) {\n    if (ms && typeof ms !== 'number' && !(ms instanceof Date)) {\n      throw new TypeError('maxAge must be a number or Date')\n    }\n\n    if (ms instanceof Date) {\n      deprecate('maxAge as Date; pass number of milliseconds instead')\n    }\n\n    this.expires = typeof ms === 'number'\n      ? new Date(Date.now() + ms)\n      : ms;\n  },\n\n  /**\n   * Get expires max-age in `ms`.\n   *\n   * @return {Number}\n   * @api public\n   */\n\n  get maxAge() {\n    return this.expires instanceof Date\n      ? this.expires.valueOf() - Date.now()\n      : this.expires;\n  },\n\n  /**\n   * Return cookie data object.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  get data() {\n    return {\n      originalMaxAge: this.originalMaxAge\n      , expires: this._expires\n      , secure: this.secure\n      , httpOnly: this.httpOnly\n      , domain: this.domain\n      , path: this.path\n      , sameSite: this.sameSite\n    }\n  },\n\n  /**\n   * Return a serialized cookie string.\n   *\n   * @return {String}\n   * @api public\n   */\n\n  serialize: function(name, val){\n    return cookie.serialize(name, val, this.data);\n  },\n\n  /**\n   * Return JSON representation of this cookie.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  toJSON: function(){\n    return this.data;\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/express-session/session/cookie.js?");

/***/ }),

/***/ "./node_modules/express-session/session/memory.js":
/*!********************************************************!*\
  !*** ./node_modules/express-session/session/memory.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * express-session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Store = __webpack_require__(/*! ./store */ \"./node_modules/express-session/session/store.js\")\nvar util = __webpack_require__(/*! util */ \"util\")\n\n/**\n * Shim setImmediate for node.js < 0.10\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Module exports.\n */\n\nmodule.exports = MemoryStore\n\n/**\n * A session store in memory.\n * @public\n */\n\nfunction MemoryStore() {\n  Store.call(this)\n  this.sessions = Object.create(null)\n}\n\n/**\n * Inherit from Store.\n */\n\nutil.inherits(MemoryStore, Store)\n\n/**\n * Get all active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.all = function all(callback) {\n  var sessionIds = Object.keys(this.sessions)\n  var sessions = Object.create(null)\n\n  for (var i = 0; i < sessionIds.length; i++) {\n    var sessionId = sessionIds[i]\n    var session = getSession.call(this, sessionId)\n\n    if (session) {\n      sessions[sessionId] = session;\n    }\n  }\n\n  callback && defer(callback, null, sessions)\n}\n\n/**\n * Clear all sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.clear = function clear(callback) {\n  this.sessions = Object.create(null)\n  callback && defer(callback)\n}\n\n/**\n * Destroy the session associated with the given session ID.\n *\n * @param {string} sessionId\n * @public\n */\n\nMemoryStore.prototype.destroy = function destroy(sessionId, callback) {\n  delete this.sessions[sessionId]\n  callback && defer(callback)\n}\n\n/**\n * Fetch session by the given session ID.\n *\n * @param {string} sessionId\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.get = function get(sessionId, callback) {\n  defer(callback, null, getSession.call(this, sessionId))\n}\n\n/**\n * Commit the given session associated with the given sessionId to the store.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.set = function set(sessionId, session, callback) {\n  this.sessions[sessionId] = JSON.stringify(session)\n  callback && defer(callback)\n}\n\n/**\n * Get number of active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.length = function length(callback) {\n  this.all(function (err, sessions) {\n    if (err) return callback(err)\n    callback(null, Object.keys(sessions).length)\n  })\n}\n\n/**\n * Touch the given session object associated with the given session ID.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.touch = function touch(sessionId, session, callback) {\n  var currentSession = getSession.call(this, sessionId)\n\n  if (currentSession) {\n    // update expiration\n    currentSession.cookie = session.cookie\n    this.sessions[sessionId] = JSON.stringify(currentSession)\n  }\n\n  callback && defer(callback)\n}\n\n/**\n * Get session from the store.\n * @private\n */\n\nfunction getSession(sessionId) {\n  var sess = this.sessions[sessionId]\n\n  if (!sess) {\n    return\n  }\n\n  // parse\n  sess = JSON.parse(sess)\n\n  if (sess.cookie) {\n    var expires = typeof sess.cookie.expires === 'string'\n      ? new Date(sess.cookie.expires)\n      : sess.cookie.expires\n\n    // destroy expired session\n    if (expires && expires <= Date.now()) {\n      delete this.sessions[sessionId]\n      return\n    }\n  }\n\n  return sess\n}\n\n\n//# sourceURL=webpack:///./node_modules/express-session/session/memory.js?");

/***/ }),

/***/ "./node_modules/express-session/session/session.js":
/*!*********************************************************!*\
  !*** ./node_modules/express-session/session/session.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n\n\n/**\n * Expose Session.\n */\n\nmodule.exports = Session;\n\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nfunction Session(req, data) {\n  Object.defineProperty(this, 'req', { value: req });\n  Object.defineProperty(this, 'id', { value: req.sessionID });\n\n  if (typeof data === 'object' && data !== null) {\n    // merge data into this, ignoring prototype properties\n    for (var prop in data) {\n      if (!(prop in this)) {\n        this[prop] = data[prop]\n      }\n    }\n  }\n}\n\n/**\n * Update reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'touch', function touch() {\n  return this.resetMaxAge();\n});\n\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'resetMaxAge', function resetMaxAge() {\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n});\n\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'save', function save(fn) {\n  this.req.sessionStore.set(this.id, this, fn || function(){});\n  return this;\n});\n\n/**\n * Re-loads the session data _without_ altering\n * the maxAge properties. Invokes the callback `fn(err)`,\n * after which time if no exception has occurred the\n * `req.session` property will be a new `Session` object,\n * although representing the same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'reload', function reload(fn) {\n  var req = this.req\n  var store = this.req.sessionStore\n\n  store.get(this.id, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n});\n\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'destroy', function destroy(fn) {\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n});\n\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'regenerate', function regenerate(fn) {\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n});\n\n/**\n * Helper function for creating a method on a prototype.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} fn\n * @private\n */\nfunction defineMethod(obj, name, fn) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: false,\n    value: fn,\n    writable: true\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/express-session/session/session.js?");

/***/ }),

/***/ "./node_modules/express-session/session/store.js":
/*!*******************************************************!*\
  !*** ./node_modules/express-session/session/store.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * Connect - session - Store\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Cookie = __webpack_require__(/*! ./cookie */ \"./node_modules/express-session/session/cookie.js\")\nvar EventEmitter = __webpack_require__(/*! events */ \"events\").EventEmitter\nvar Session = __webpack_require__(/*! ./session */ \"./node_modules/express-session/session/session.js\")\nvar util = __webpack_require__(/*! util */ \"util\")\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Store\n\n/**\n * Abstract base class for session stores.\n * @public\n */\n\nfunction Store () {\n  EventEmitter.call(this)\n}\n\n/**\n * Inherit from EventEmitter.\n */\n\nutil.inherits(Store, EventEmitter)\n\n/**\n * Re-generate the given requests's session.\n *\n * @param {IncomingRequest} req\n * @return {Function} fn\n * @api public\n */\n\nStore.prototype.regenerate = function(req, fn){\n  var self = this;\n  this.destroy(req.sessionID, function(err){\n    self.generate(req);\n    fn(err);\n  });\n};\n\n/**\n * Load a `Session` instance via the given `sid`\n * and invoke the callback `fn(err, sess)`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\nStore.prototype.load = function(sid, fn){\n  var self = this;\n  this.get(sid, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn();\n    var req = { sessionID: sid, sessionStore: self };\n    fn(null, self.createSession(req, sess))\n  });\n};\n\n/**\n * Create session from JSON `sess` data.\n *\n * @param {IncomingRequest} req\n * @param {Object} sess\n * @return {Session}\n * @api private\n */\n\nStore.prototype.createSession = function(req, sess){\n  var expires = sess.cookie.expires\n  var originalMaxAge = sess.cookie.originalMaxAge\n\n  sess.cookie = new Cookie(sess.cookie);\n\n  if (typeof expires === 'string') {\n    // convert expires to a Date object\n    sess.cookie.expires = new Date(expires)\n  }\n\n  // keep originalMaxAge intact\n  sess.cookie.originalMaxAge = originalMaxAge\n\n  req.session = new Session(req, sess);\n  return req.session;\n};\n\n\n//# sourceURL=webpack:///./node_modules/express-session/session/store.js?");

/***/ }),

/***/ "./node_modules/file-uri-to-path/index.js":
/*!************************************************!*\
  !*** ./node_modules/file-uri-to-path/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * Module dependencies.\n */\n\nvar sep = __webpack_require__(/*! path */ \"path\").sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix path…\n    path = sep + path;\n  }\n\n  return host + path;\n}\n\n\n//# sourceURL=webpack:///./node_modules/file-uri-to-path/index.js?");

/***/ }),

/***/ "./node_modules/hiredis/hiredis.js":
/*!*****************************************!*\
  !*** ./node_modules/hiredis/hiredis.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var net = __webpack_require__(/*! net */ \"net\"),\n    hiredis = __webpack_require__(/*! bindings */ \"./node_modules/bindings/bindings.js\")('hiredis.node');\n\nvar bufStar = new Buffer(\"*\", \"ascii\");\nvar bufDollar = new Buffer(\"$\", \"ascii\");\nvar bufCrlf = new Buffer(\"\\r\\n\", \"ascii\");\n\nexports.Reader = hiredis.Reader;\n\nexports.writeCommand = function() {\n    var args = arguments,\n        bufLen = new Buffer(String(args.length), \"ascii\"),\n        parts = [bufStar, bufLen, bufCrlf],\n        size = 3 + bufLen.length;\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        if (!Buffer.isBuffer(arg))\n            arg = new Buffer(String(arg));\n\n        bufLen = new Buffer(String(arg.length), \"ascii\");\n        parts = parts.concat([\n            bufDollar, bufLen, bufCrlf,\n            arg, bufCrlf\n        ]);\n        size += 5 + bufLen.length + arg.length;\n    }\n\n    return Buffer.concat(parts, size);\n}\n\nexports.createConnection = function(port, host) {\n    var s = net.createConnection(port || 6379, host);\n    var r = new hiredis.Reader();\n    var _write = s.write;\n\n    s.write = function() {\n        var data = exports.writeCommand.apply(this, arguments);\n        return _write.call(s, data);\n    }\n\n    s.on(\"data\", function(data) {\n        var reply;\n        r.feed(data);\n        try {\n            while((reply = r.get()) !== undefined)\n                s.emit(\"reply\", reply);\n        } catch(err) {\n            r = null;\n            s.emit(\"error\", err);\n            s.destroy();\n        }\n    });\n\n    return s;\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/hiredis/hiredis.js?");

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack:///./node_modules/object-assign/index.js?");

/***/ }),

/***/ "./node_modules/on-headers/index.js":
/*!******************************************!*\
  !*** ./node_modules/on-headers/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * on-headers\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onHeaders\n\n/**\n * Create a replacement writeHead method.\n *\n * @param {function} prevWriteHead\n * @param {function} listener\n * @private\n */\n\nfunction createWriteHead (prevWriteHead, listener) {\n  var fired = false\n\n  // return function with core name and argument list\n  return function writeHead (statusCode) {\n    // set headers from arguments\n    var args = setWriteHeadHeaders.apply(this, arguments)\n\n    // fire listener\n    if (!fired) {\n      fired = true\n      listener.call(this)\n\n      // pass-along an updated status code\n      if (typeof args[0] === 'number' && this.statusCode !== args[0]) {\n        args[0] = this.statusCode\n        args.length = 1\n      }\n    }\n\n    return prevWriteHead.apply(this, args)\n  }\n}\n\n/**\n * Execute a listener when a response is about to write headers.\n *\n * @param {object} res\n * @return {function} listener\n * @public\n */\n\nfunction onHeaders (res, listener) {\n  if (!res) {\n    throw new TypeError('argument res is required')\n  }\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('argument listener must be a function')\n  }\n\n  res.writeHead = createWriteHead(res.writeHead, listener)\n}\n\n/**\n * Set headers contained in array on the response object.\n *\n * @param {object} res\n * @param {array} headers\n * @private\n */\n\nfunction setHeadersFromArray (res, headers) {\n  for (var i = 0; i < headers.length; i++) {\n    res.setHeader(headers[i][0], headers[i][1])\n  }\n}\n\n/**\n * Set headers contained in object on the response object.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeadersFromObject (res, headers) {\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i]\n    if (k) res.setHeader(k, headers[k])\n  }\n}\n\n/**\n * Set headers and other properties on the response object.\n *\n * @param {number} statusCode\n * @private\n */\n\nfunction setWriteHeadHeaders (statusCode) {\n  var length = arguments.length\n  var headerIndex = length > 1 && typeof arguments[1] === 'string'\n    ? 2\n    : 1\n\n  var headers = length >= headerIndex + 1\n    ? arguments[headerIndex]\n    : undefined\n\n  this.statusCode = statusCode\n\n  if (Array.isArray(headers)) {\n    // handle array case\n    setHeadersFromArray(this, headers)\n  } else if (headers) {\n    // handle object case\n    setHeadersFromObject(this, headers)\n  }\n\n  // copy leading arguments\n  var args = new Array(Math.min(length, headerIndex))\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i]\n  }\n\n  return args\n}\n\n\n//# sourceURL=webpack:///./node_modules/on-headers/index.js?");

/***/ }),

/***/ "./node_modules/parseurl/index.js":
/*!****************************************!*\
  !*** ./node_modules/parseurl/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = __webpack_require__(/*! url */ \"url\")\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n\n\n//# sourceURL=webpack:///./node_modules/parseurl/index.js?");

/***/ }),

/***/ "./node_modules/random-bytes/index.js":
/*!********************************************!*\
  !*** ./node_modules/random-bytes/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * random-bytes\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\")\n\n/**\n * Module variables.\n * @private\n */\n\nvar generateAttempts = crypto.randomBytes === crypto.pseudoRandomBytes ? 1 : 3\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = randomBytes\nmodule.exports.sync = randomBytesSync\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction randomBytes(size, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateRandomBytes(size, generateAttempts, callback)\n  }\n\n  return new Promise(function executor(resolve, reject) {\n    generateRandomBytes(size, generateAttempts, function onRandomBytes(err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Generates strong pseudo-random bytes sync.\n *\n * @param {number} size\n * @return {Buffer}\n * @public\n */\n\nfunction randomBytesSync(size) {\n  var err = null\n\n  for (var i = 0; i < generateAttempts; i++) {\n    try {\n      return crypto.randomBytes(size)\n    } catch (e) {\n      err = e\n    }\n  }\n\n  throw err\n}\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {number} attempts\n * @param {function} callback\n * @private\n */\n\nfunction generateRandomBytes(size, attempts, callback) {\n  crypto.randomBytes(size, function onRandomBytes(err, buf) {\n    if (!err) return callback(null, buf)\n    if (!--attempts) return callback(err)\n    setTimeout(generateRandomBytes.bind(null, size, attempts, callback), 10)\n  })\n}\n\n\n//# sourceURL=webpack:///./node_modules/random-bytes/index.js?");

/***/ }),

/***/ "./node_modules/redis-commands/commands.json":
/*!***************************************************!*\
  !*** ./node_modules/redis-commands/commands.json ***!
  \***************************************************/
/*! exports provided: append, asking, auth, bgrewriteaof, bgsave, bitcount, bitfield, bitop, bitpos, blpop, brpop, brpoplpush, bzpopmax, bzpopmin, client, cluster, command, config, dbsize, debug, decr, decrby, del, discard, dump, echo, eval, evalsha, exec, exists, expire, expireat, flushall, flushdb, geoadd, geodist, geohash, geopos, georadius, georadius_ro, georadiusbymember, georadiusbymember_ro, get, getbit, getrange, getset, hdel, hexists, hget, hgetall, hincrby, hincrbyfloat, hkeys, hlen, hmget, hmset, host:, hscan, hset, hsetnx, hstrlen, hvals, incr, incrby, incrbyfloat, info, keys, lastsave, latency, lindex, linsert, llen, lolwut, lpop, lpush, lpushx, lrange, lrem, lset, ltrim, memory, mget, migrate, module, monitor, move, mset, msetnx, multi, object, persist, pexpire, pexpireat, pfadd, pfcount, pfdebug, pfmerge, pfselftest, ping, post, psetex, psubscribe, psync, pttl, publish, pubsub, punsubscribe, quit, randomkey, readonly, readwrite, rename, renamenx, replconf, replicaof, restore, restore-asking, role, rpop, rpoplpush, rpush, rpushx, sadd, save, scan, scard, script, sdiff, sdiffstore, select, set, setbit, setex, setnx, setrange, shutdown, sinter, sinterstore, sismember, slaveof, slowlog, smembers, smove, sort, spop, srandmember, srem, sscan, strlen, subscribe, substr, sunion, sunionstore, swapdb, sync, time, touch, ttl, type, unlink, unsubscribe, unwatch, wait, watch, xack, xadd, xclaim, xdel, xgroup, xinfo, xlen, xpending, xrange, xread, xreadgroup, xrevrange, xsetid, xtrim, zadd, zcard, zcount, zincrby, zinterstore, zlexcount, zpopmax, zpopmin, zrange, zrangebylex, zrangebyscore, zrank, zrem, zremrangebylex, zremrangebyrank, zremrangebyscore, zrevrange, zrevrangebylex, zrevrangebyscore, zrevrank, zscan, zscore, zunionstore, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"append\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"asking\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"auth\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"bgrewriteaof\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"bgsave\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"bitcount\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"bitfield\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"bitop\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":2,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"bitpos\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"blpop\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"noscript\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-2,\\\"step\\\":1},\\\"brpop\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"noscript\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-2,\\\"step\\\":1},\\\"brpoplpush\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"noscript\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"bzpopmax\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"noscript\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-2,\\\"step\\\":1},\\\"bzpopmin\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"noscript\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-2,\\\"step\\\":1},\\\"client\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"cluster\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"admin\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"command\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"random\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"config\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"dbsize\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"debug\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"decr\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"decrby\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"del\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"discard\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"noscript\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"dump\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"echo\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"eval\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"noscript\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"evalsha\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"noscript\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"exec\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"noscript\\\",\\\"skip_monitor\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"exists\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"expire\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"expireat\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"flushall\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"flushdb\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"geoadd\\\":{\\\"arity\\\":-5,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"geodist\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"geohash\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"geopos\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"georadius\\\":{\\\"arity\\\":-6,\\\"flags\\\":[\\\"write\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"georadius_ro\\\":{\\\"arity\\\":-6,\\\"flags\\\":[\\\"readonly\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"georadiusbymember\\\":{\\\"arity\\\":-5,\\\"flags\\\":[\\\"write\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"georadiusbymember_ro\\\":{\\\"arity\\\":-5,\\\"flags\\\":[\\\"readonly\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"get\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"getbit\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"getrange\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"getset\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hdel\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hexists\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hget\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hgetall\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hincrby\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hincrbyfloat\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hkeys\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"sort_for_script\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hlen\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hmget\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hmset\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"host:\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"hscan\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hset\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hsetnx\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hstrlen\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"hvals\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"sort_for_script\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"incr\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"incrby\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"incrbyfloat\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"info\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"random\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"keys\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"sort_for_script\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"lastsave\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"latency\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"lindex\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"linsert\\\":{\\\"arity\\\":5,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"llen\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"lolwut\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"lpop\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"lpush\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"lpushx\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"lrange\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"lrem\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"lset\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"ltrim\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"memory\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"mget\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"migrate\\\":{\\\"arity\\\":-6,\\\"flags\\\":[\\\"write\\\",\\\"random\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"module\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"monitor\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"move\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"mset\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":2},\\\"msetnx\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":2},\\\"multi\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"noscript\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"object\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":2,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"persist\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"pexpire\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"pexpireat\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"pfadd\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"pfcount\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"pfdebug\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"pfmerge\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"pfselftest\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"admin\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"ping\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"stale\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"post\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"psetex\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"psubscribe\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"pubsub\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"psync\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"pttl\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"publish\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"pubsub\\\",\\\"loading\\\",\\\"stale\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"pubsub\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"pubsub\\\",\\\"random\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"punsubscribe\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"pubsub\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"quit\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"loading\\\",\\\"stale\\\",\\\"readonly\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"randomkey\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"readonly\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"readwrite\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"rename\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"renamenx\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"replconf\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"replicaof\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"restore\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"restore-asking\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"asking\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"role\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"rpop\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"rpoplpush\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"rpush\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"rpushx\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"sadd\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"save\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"scan\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"scard\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"script\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"sdiff\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"sort_for_script\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"sdiffstore\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"select\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"loading\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"set\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"setbit\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"setex\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"setnx\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"setrange\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"shutdown\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"sinter\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"sort_for_script\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"sinterstore\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"sismember\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"slaveof\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"admin\\\",\\\"noscript\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"slowlog\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"admin\\\",\\\"random\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"smembers\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"sort_for_script\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"smove\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"sort\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"spop\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"srandmember\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"srem\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"sscan\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"strlen\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"subscribe\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"pubsub\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"substr\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"sunion\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"sort_for_script\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"sunionstore\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"swapdb\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"sync\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"readonly\\\",\\\"admin\\\",\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"time\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"touch\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"ttl\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"type\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"unlink\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"unsubscribe\\\":{\\\"arity\\\":-1,\\\"flags\\\":[\\\"pubsub\\\",\\\"noscript\\\",\\\"loading\\\",\\\"stale\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"unwatch\\\":{\\\"arity\\\":1,\\\"flags\\\":[\\\"noscript\\\",\\\"fast\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"wait\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"noscript\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"watch\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"noscript\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":-1,\\\"step\\\":1},\\\"xack\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xadd\\\":{\\\"arity\\\":-5,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xclaim\\\":{\\\"arity\\\":-6,\\\"flags\\\":[\\\"write\\\",\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xdel\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xgroup\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\"],\\\"keyStart\\\":2,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"xinfo\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":2,\\\"keyStop\\\":2,\\\"step\\\":1},\\\"xlen\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xpending\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xrange\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xread\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\",\\\"noscript\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xreadgroup\\\":{\\\"arity\\\":-7,\\\"flags\\\":[\\\"write\\\",\\\"noscript\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xrevrange\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xsetid\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"xtrim\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"random\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zadd\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zcard\\\":{\\\"arity\\\":2,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zcount\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zincrby\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zinterstore\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0},\\\"zlexcount\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zpopmax\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zpopmin\\\":{\\\"arity\\\":-2,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrange\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrangebylex\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrangebyscore\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrank\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrem\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"write\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zremrangebylex\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zremrangebyrank\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zremrangebyscore\\\":{\\\"arity\\\":4,\\\"flags\\\":[\\\"write\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrevrange\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrevrangebylex\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrevrangebyscore\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"readonly\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zrevrank\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zscan\\\":{\\\"arity\\\":-3,\\\"flags\\\":[\\\"readonly\\\",\\\"random\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zscore\\\":{\\\"arity\\\":3,\\\"flags\\\":[\\\"readonly\\\",\\\"fast\\\"],\\\"keyStart\\\":1,\\\"keyStop\\\":1,\\\"step\\\":1},\\\"zunionstore\\\":{\\\"arity\\\":-4,\\\"flags\\\":[\\\"write\\\",\\\"denyoom\\\",\\\"movablekeys\\\"],\\\"keyStart\\\":0,\\\"keyStop\\\":0,\\\"step\\\":0}}\");\n\n//# sourceURL=webpack:///./node_modules/redis-commands/commands.json?");

/***/ }),

/***/ "./node_modules/redis-commands/index.js":
/*!**********************************************!*\
  !*** ./node_modules/redis-commands/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar commands = __webpack_require__(/*! ./commands.json */ \"./node_modules/redis-commands/commands.json\")\n\n/**\n * Redis command list\n *\n * All commands are lowercased.\n *\n * @var {string[]}\n * @public\n */\nexports.list = Object.keys(commands)\n\nvar flags = {}\nexports.list.forEach(function (commandName) {\n  flags[commandName] = commands[commandName].flags.reduce(function (flags, flag) {\n    flags[flag] = true\n    return flags\n  }, {})\n})\n/**\n * Check if the command exists\n *\n * @param {string} commandName - the command name\n * @return {boolean} result\n * @public\n */\nexports.exists = function (commandName) {\n  return Boolean(commands[commandName])\n}\n\n/**\n * Check if the command has the flag\n *\n * Some of possible flags: readonly, noscript, loading\n * @param {string} commandName - the command name\n * @param {string} flag - the flag to check\n * @return {boolean} result\n * @public\n */\nexports.hasFlag = function (commandName, flag) {\n  if (!flags[commandName]) {\n    throw new Error('Unknown command ' + commandName)\n  }\n\n  return Boolean(flags[commandName][flag])\n}\n\n/**\n * Get indexes of keys in the command arguments\n *\n * @param {string} commandName - the command name\n * @param {string[]} args - the arguments of the command\n * @param {object} [options] - options\n * @param {boolean} [options.parseExternalKey] - parse external keys\n * @return {number[]} - the list of the index\n * @public\n *\n * @example\n * ```javascript\n * getKeyIndexes('set', ['key', 'value']) // [0]\n * getKeyIndexes('mget', ['key1', 'key2']) // [0, 1]\n * ```\n */\nexports.getKeyIndexes = function (commandName, args, options) {\n  var command = commands[commandName]\n  if (!command) {\n    throw new Error('Unknown command ' + commandName)\n  }\n\n  if (!Array.isArray(args)) {\n    throw new Error('Expect args to be an array')\n  }\n\n  var keys = []\n  var i, keyStart, keyStop, parseExternalKey\n  switch (commandName) {\n    case 'zunionstore':\n    case 'zinterstore':\n      keys.push(0)\n    // fall through\n    case 'eval':\n    case 'evalsha':\n      keyStop = Number(args[1]) + 2\n      for (i = 2; i < keyStop; i++) {\n        keys.push(i)\n      }\n      break\n    case 'sort':\n      parseExternalKey = options && options.parseExternalKey\n      keys.push(0)\n      for (i = 1; i < args.length - 1; i++) {\n        if (typeof args[i] !== 'string') {\n          continue\n        }\n        var directive = args[i].toUpperCase()\n        if (directive === 'GET') {\n          i += 1\n          if (args[i] !== '#') {\n            if (parseExternalKey) {\n              keys.push([i, getExternalKeyNameLength(args[i])])\n            } else {\n              keys.push(i)\n            }\n          }\n        } else if (directive === 'BY') {\n          i += 1\n          if (parseExternalKey) {\n            keys.push([i, getExternalKeyNameLength(args[i])])\n          } else {\n            keys.push(i)\n          }\n        } else if (directive === 'STORE') {\n          i += 1\n          keys.push(i)\n        }\n      }\n      break\n    case 'migrate':\n      if (args[2] === '') {\n        for (i = 5; i < args.length - 1; i++) {\n          if (args[i].toUpperCase() === 'KEYS') {\n            for (var j = i + 1; j < args.length; j++) {\n              keys.push(j)\n            }\n            break\n          }\n        }\n      } else {\n        keys.push(2)\n      }\n      break\n    case 'xreadgroup':\n    case 'xread':\n      // Keys are 1st half of the args after STREAMS argument.\n      for (i = commandName === 'xread' ? 0 : 3; i < args.length - 1; i++) {\n        if (String(args[i]).toUpperCase() === 'STREAMS') {\n          for (j = i + 1; j <= i + ((args.length - 1 - i) / 2); j++) {\n            keys.push(j)\n          }\n          break\n        }\n      }\n      break\n    default:\n      // Step has to be at least one in this case, otherwise the command does\n      // not contain a key.\n      if (command.step > 0) {\n        keyStart = command.keyStart - 1\n        keyStop = command.keyStop > 0 ? command.keyStop : args.length + command.keyStop + 1\n        for (i = keyStart; i < keyStop; i += command.step) {\n          keys.push(i)\n        }\n      }\n      break\n  }\n\n  return keys\n}\n\nfunction getExternalKeyNameLength (key) {\n  if (typeof key !== 'string') {\n    key = String(key)\n  }\n  var hashPos = key.indexOf('->')\n  return hashPos === -1 ? key.length : hashPos\n}\n\n\n//# sourceURL=webpack:///./node_modules/redis-commands/index.js?");

/***/ }),

/***/ "./node_modules/redis-parser/index.js":
/*!********************************************!*\
  !*** ./node_modules/redis-parser/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = __webpack_require__(/*! ./lib/parser */ \"./node_modules/redis-parser/lib/parser.js\")\nmodule.exports.ReplyError = __webpack_require__(/*! ./lib/replyError */ \"./node_modules/redis-parser/lib/replyError.js\")\nmodule.exports.RedisError = __webpack_require__(/*! ./lib/redisError */ \"./node_modules/redis-parser/lib/redisError.js\")\nmodule.exports.ParserError = __webpack_require__(/*! ./lib/redisError */ \"./node_modules/redis-parser/lib/redisError.js\")\n\n\n//# sourceURL=webpack:///./node_modules/redis-parser/index.js?");

/***/ }),

/***/ "./node_modules/redis-parser/lib/hiredis.js":
/*!**************************************************!*\
  !*** ./node_modules/redis-parser/lib/hiredis.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar hiredis = __webpack_require__(/*! hiredis */ \"./node_modules/hiredis/hiredis.js\")\nvar ReplyError = __webpack_require__(/*! ../lib/replyError */ \"./node_modules/redis-parser/lib/replyError.js\")\nvar ParserError = __webpack_require__(/*! ../lib/parserError */ \"./node_modules/redis-parser/lib/parserError.js\")\n\n/**\n * Parse data\n * @param parser\n * @returns {*}\n */\nfunction parseData (parser, data) {\n  try {\n    return parser.reader.get()\n  } catch (err) {\n    // Protocol errors land here\n    // Reset the parser. Otherwise new commands can't be processed properly\n    parser.reader = new hiredis.Reader(parser.options)\n    parser.returnFatalError(new ParserError(err.message, JSON.stringify(data), -1))\n  }\n}\n\n/**\n * Hiredis Parser\n * @param options\n * @constructor\n */\nfunction HiredisReplyParser (options) {\n  this.returnError = options.returnError\n  this.returnFatalError = options.returnFatalError || options.returnError\n  this.returnReply = options.returnReply\n  this.name = 'hiredis'\n  this.options = {\n    return_buffers: !!options.returnBuffers\n  }\n  this.reader = new hiredis.Reader(this.options)\n}\n\nHiredisReplyParser.prototype.execute = function (data) {\n  this.reader.feed(data)\n  var reply = parseData(this, data)\n\n  while (reply !== undefined) {\n    if (reply && reply.name === 'Error') {\n      this.returnError(new ReplyError(reply.message))\n    } else {\n      this.returnReply(reply)\n    }\n    reply = parseData(this, data)\n  }\n}\n\n/**\n * Reset the parser values to the initial state\n *\n * @returns {undefined}\n */\nHiredisReplyParser.prototype.reset = function () {\n  this.reader = new hiredis.Reader(this.options)\n}\n\nmodule.exports = HiredisReplyParser\n\n\n//# sourceURL=webpack:///./node_modules/redis-parser/lib/hiredis.js?");

/***/ }),

/***/ "./node_modules/redis-parser/lib/parser.js":
/*!*************************************************!*\
  !*** ./node_modules/redis-parser/lib/parser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar StringDecoder = __webpack_require__(/*! string_decoder */ \"string_decoder\").StringDecoder\nvar decoder = new StringDecoder()\nvar ReplyError = __webpack_require__(/*! ./replyError */ \"./node_modules/redis-parser/lib/replyError.js\")\nvar ParserError = __webpack_require__(/*! ./parserError */ \"./node_modules/redis-parser/lib/parserError.js\")\nvar bufferPool = bufferAlloc(32 * 1024)\nvar bufferOffset = 0\nvar interval = null\nvar counter = 0\nvar notDecreased = 0\nvar isModern = typeof Buffer.allocUnsafe === 'function'\n\n/**\n * For backwards compatibility\n * @param len\n * @returns {Buffer}\n */\n\nfunction bufferAlloc (len) {\n  return isModern ? Buffer.allocUnsafe(len) : new Buffer(len)\n}\n\n/**\n * Used for lengths and numbers only, faster perf on arrays / bulks\n * @param parser\n * @returns {*}\n */\nfunction parseSimpleNumbers (parser) {\n  var offset = parser.offset\n  var length = parser.buffer.length - 1\n  var number = 0\n  var sign = 1\n\n  if (parser.buffer[offset] === 45) {\n    sign = -1\n    offset++\n  }\n\n  while (offset < length) {\n    var c1 = parser.buffer[offset++]\n    if (c1 === 13) { // \\r\\n\n      parser.offset = offset + 1\n      return sign * number\n    }\n    number = (number * 10) + (c1 - 48)\n  }\n}\n\n/**\n * Used for integer numbers in case of the returnNumbers option\n *\n * The maximimum possible integer to use is: Math.floor(Number.MAX_SAFE_INTEGER / 10)\n * Staying in a SMI Math.floor((Math.pow(2, 32) / 10) - 1) is even more efficient though\n *\n * @param parser\n * @returns {*}\n */\nfunction parseStringNumbers (parser) {\n  var offset = parser.offset\n  var length = parser.buffer.length - 1\n  var number = 0\n  var res = ''\n\n  if (parser.buffer[offset] === 45) {\n    res += '-'\n    offset++\n  }\n\n  while (offset < length) {\n    var c1 = parser.buffer[offset++]\n    if (c1 === 13) { // \\r\\n\n      parser.offset = offset + 1\n      if (number !== 0) {\n        res += number\n      }\n      return res\n    } else if (number > 429496728) {\n      res += (number * 10) + (c1 - 48)\n      number = 0\n    } else if (c1 === 48 && number === 0) {\n      res += 0\n    } else {\n      number = (number * 10) + (c1 - 48)\n    }\n  }\n}\n\n/**\n * Returns a string or buffer of the provided offset start and\n * end ranges. Checks `optionReturnBuffers`.\n *\n * If returnBuffers is active, all return values are returned as buffers besides numbers and errors\n *\n * @param parser\n * @param start\n * @param end\n * @returns {*}\n */\nfunction convertBufferRange (parser, start, end) {\n  parser.offset = end + 2\n  if (parser.optionReturnBuffers === true) {\n    return parser.buffer.slice(start, end)\n  }\n\n  return parser.buffer.toString('utf-8', start, end)\n}\n\n/**\n * Parse a '+' redis simple string response but forward the offsets\n * onto convertBufferRange to generate a string.\n * @param parser\n * @returns {*}\n */\nfunction parseSimpleString (parser) {\n  var start = parser.offset\n  var offset = start\n  var buffer = parser.buffer\n  var length = buffer.length - 1\n\n  while (offset < length) {\n    if (buffer[offset++] === 13) { // \\r\\n\n      return convertBufferRange(parser, start, offset - 1)\n    }\n  }\n}\n\n/**\n * Returns the string length via parseSimpleNumbers\n * @param parser\n * @returns {*}\n */\nfunction parseLength (parser) {\n  var string = parseSimpleNumbers(parser)\n  if (string !== undefined) {\n    return string\n  }\n}\n\n/**\n * Parse a ':' redis integer response\n *\n * If stringNumbers is activated the parser always returns numbers as string\n * This is important for big numbers (number > Math.pow(2, 53)) as js numbers\n * are 64bit floating point numbers with reduced precision\n *\n * @param parser\n * @returns {*}\n */\nfunction parseInteger (parser) {\n  if (parser.optionStringNumbers) {\n    return parseStringNumbers(parser)\n  }\n  return parseSimpleNumbers(parser)\n}\n\n/**\n * Parse a '$' redis bulk string response\n * @param parser\n * @returns {*}\n */\nfunction parseBulkString (parser) {\n  var length = parseLength(parser)\n  if (length === undefined) {\n    return\n  }\n  if (length === -1) {\n    return null\n  }\n  var offsetEnd = parser.offset + length\n  if (offsetEnd + 2 > parser.buffer.length) {\n    parser.bigStrSize = offsetEnd + 2\n    parser.bigOffset = parser.offset\n    parser.totalChunkSize = parser.buffer.length\n    parser.bufferCache.push(parser.buffer)\n    return\n  }\n\n  return convertBufferRange(parser, parser.offset, offsetEnd)\n}\n\n/**\n * Parse a '-' redis error response\n * @param parser\n * @returns {Error}\n */\nfunction parseError (parser) {\n  var string = parseSimpleString(parser)\n  if (string !== undefined) {\n    if (parser.optionReturnBuffers === true) {\n      string = string.toString()\n    }\n    return new ReplyError(string)\n  }\n}\n\n/**\n * Parsing error handler, resets parser buffer\n * @param parser\n * @param error\n */\nfunction handleError (parser, error) {\n  parser.buffer = null\n  parser.returnFatalError(error)\n}\n\n/**\n * Parse a '*' redis array response\n * @param parser\n * @returns {*}\n */\nfunction parseArray (parser) {\n  var length = parseLength(parser)\n  if (length === undefined) {\n    return\n  }\n  if (length === -1) {\n    return null\n  }\n  var responses = new Array(length)\n  return parseArrayElements(parser, responses, 0)\n}\n\n/**\n * Push a partly parsed array to the stack\n *\n * @param parser\n * @param elem\n * @param i\n * @returns {undefined}\n */\nfunction pushArrayCache (parser, elem, pos) {\n  parser.arrayCache.push(elem)\n  parser.arrayPos.push(pos)\n}\n\n/**\n * Parse chunked redis array response\n * @param parser\n * @returns {*}\n */\nfunction parseArrayChunks (parser) {\n  var tmp = parser.arrayCache.pop()\n  var pos = parser.arrayPos.pop()\n  if (parser.arrayCache.length) {\n    var res = parseArrayChunks(parser)\n    if (!res) {\n      pushArrayCache(parser, tmp, pos)\n      return\n    }\n    tmp[pos++] = res\n  }\n  return parseArrayElements(parser, tmp, pos)\n}\n\n/**\n * Parse redis array response elements\n * @param parser\n * @param responses\n * @param i\n * @returns {*}\n */\nfunction parseArrayElements (parser, responses, i) {\n  var bufferLength = parser.buffer.length\n  while (i < responses.length) {\n    var offset = parser.offset\n    if (parser.offset >= bufferLength) {\n      pushArrayCache(parser, responses, i)\n      return\n    }\n    var response = parseType(parser, parser.buffer[parser.offset++])\n    if (response === undefined) {\n      if (!parser.arrayCache.length) {\n        parser.offset = offset\n      }\n      pushArrayCache(parser, responses, i)\n      return\n    }\n    responses[i] = response\n    i++\n  }\n\n  return responses\n}\n\n/**\n * Called the appropriate parser for the specified type.\n * @param parser\n * @param type\n * @returns {*}\n */\nfunction parseType (parser, type) {\n  switch (type) {\n    case 36: // $\n      return parseBulkString(parser)\n    case 58: // :\n      return parseInteger(parser)\n    case 43: // +\n      return parseSimpleString(parser)\n    case 42: // *\n      return parseArray(parser)\n    case 45: // -\n      return parseError(parser)\n    default:\n      return handleError(parser, new ParserError(\n        'Protocol error, got ' + JSON.stringify(String.fromCharCode(type)) + ' as reply type byte',\n        JSON.stringify(parser.buffer),\n        parser.offset\n      ))\n  }\n}\n\n// All allowed options including their typeof value\nvar optionTypes = {\n  returnError: 'function',\n  returnFatalError: 'function',\n  returnReply: 'function',\n  returnBuffers: 'boolean',\n  stringNumbers: 'boolean',\n  name: 'string'\n}\n\n/**\n * Javascript Redis Parser\n * @param options\n * @constructor\n */\nfunction JavascriptRedisParser (options) {\n  if (!(this instanceof JavascriptRedisParser)) {\n    return new JavascriptRedisParser(options)\n  }\n  if (!options || !options.returnError || !options.returnReply) {\n    throw new TypeError('Please provide all return functions while initiating the parser')\n  }\n  for (var key in options) {\n    // eslint-disable-next-line valid-typeof\n    if (optionTypes.hasOwnProperty(key) && typeof options[key] !== optionTypes[key]) {\n      throw new TypeError('The options argument contains the property \"' + key + '\" that is either unknown or of a wrong type')\n    }\n  }\n  if (options.name === 'hiredis') {\n    /* istanbul ignore next: hiredis is only supported for legacy usage */\n    try {\n      var Hiredis = __webpack_require__(/*! ./hiredis */ \"./node_modules/redis-parser/lib/hiredis.js\")\n      console.error(new TypeError('Using hiredis is discouraged. Please use the faster JS parser by removing the name option.').stack.replace('Error', 'Warning'))\n      return new Hiredis(options)\n    } catch (e) {\n      console.error(new TypeError('Hiredis is not installed. Please remove the `name` option. The (faster) JS parser is used instead.').stack.replace('Error', 'Warning'))\n    }\n  }\n  this.optionReturnBuffers = !!options.returnBuffers\n  this.optionStringNumbers = !!options.stringNumbers\n  this.returnError = options.returnError\n  this.returnFatalError = options.returnFatalError || options.returnError\n  this.returnReply = options.returnReply\n  this.name = 'javascript'\n  this.reset()\n}\n\n/**\n * Reset the parser values to the initial state\n *\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.reset = function () {\n  this.offset = 0\n  this.buffer = null\n  this.bigStrSize = 0\n  this.bigOffset = 0\n  this.totalChunkSize = 0\n  this.bufferCache = []\n  this.arrayCache = []\n  this.arrayPos = []\n}\n\n/**\n * Set the returnBuffers option\n *\n * @param returnBuffers\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.setReturnBuffers = function (returnBuffers) {\n  if (typeof returnBuffers !== 'boolean') {\n    throw new TypeError('The returnBuffers argument has to be a boolean')\n  }\n  this.optionReturnBuffers = returnBuffers\n}\n\n/**\n * Set the stringNumbers option\n *\n * @param stringNumbers\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.setStringNumbers = function (stringNumbers) {\n  if (typeof stringNumbers !== 'boolean') {\n    throw new TypeError('The stringNumbers argument has to be a boolean')\n  }\n  this.optionStringNumbers = stringNumbers\n}\n\n/**\n * Decrease the bufferPool size over time\n * @returns {undefined}\n */\nfunction decreaseBufferPool () {\n  if (bufferPool.length > 50 * 1024) {\n    // Balance between increasing and decreasing the bufferPool\n    if (counter === 1 || notDecreased > counter * 2) {\n      // Decrease the bufferPool by 10% by removing the first 10% of the current pool\n      var sliceLength = Math.floor(bufferPool.length / 10)\n      if (bufferOffset <= sliceLength) {\n        bufferOffset = 0\n      } else {\n        bufferOffset -= sliceLength\n      }\n      bufferPool = bufferPool.slice(sliceLength, bufferPool.length)\n    } else {\n      notDecreased++\n      counter--\n    }\n  } else {\n    clearInterval(interval)\n    counter = 0\n    notDecreased = 0\n    interval = null\n  }\n}\n\n/**\n * Check if the requested size fits in the current bufferPool.\n * If it does not, reset and increase the bufferPool accordingly.\n *\n * @param length\n * @returns {undefined}\n */\nfunction resizeBuffer (length) {\n  if (bufferPool.length < length + bufferOffset) {\n    var multiplier = length > 1024 * 1024 * 75 ? 2 : 3\n    if (bufferOffset > 1024 * 1024 * 111) {\n      bufferOffset = 1024 * 1024 * 50\n    }\n    bufferPool = bufferAlloc(length * multiplier + bufferOffset)\n    bufferOffset = 0\n    counter++\n    if (interval === null) {\n      interval = setInterval(decreaseBufferPool, 50)\n    }\n  }\n}\n\n/**\n * Concat a bulk string containing multiple chunks\n *\n * Notes:\n * 1) The first chunk might contain the whole bulk string including the \\r\n * 2) We are only safe to fully add up elements that are neither the first nor any of the last two elements\n *\n * @param parser\n * @returns {String}\n */\nfunction concatBulkString (parser) {\n  var list = parser.bufferCache\n  var chunks = list.length\n  var offset = parser.bigStrSize - parser.totalChunkSize\n  parser.offset = offset\n  if (offset <= 2) {\n    if (chunks === 2) {\n      return list[0].toString('utf8', parser.bigOffset, list[0].length + offset - 2)\n    }\n    chunks--\n    offset = list[list.length - 2].length + offset\n  }\n  var res = decoder.write(list[0].slice(parser.bigOffset))\n  for (var i = 1; i < chunks - 1; i++) {\n    res += decoder.write(list[i])\n  }\n  res += decoder.end(list[i].slice(0, offset - 2))\n  return res\n}\n\n/**\n * Concat the collected chunks from parser.bufferCache.\n *\n * Increases the bufferPool size beforehand if necessary.\n *\n * @param parser\n * @returns {Buffer}\n */\nfunction concatBulkBuffer (parser) {\n  var list = parser.bufferCache\n  var chunks = list.length\n  var length = parser.bigStrSize - parser.bigOffset - 2\n  var offset = parser.bigStrSize - parser.totalChunkSize\n  parser.offset = offset\n  if (offset <= 2) {\n    if (chunks === 2) {\n      return list[0].slice(parser.bigOffset, list[0].length + offset - 2)\n    }\n    chunks--\n    offset = list[list.length - 2].length + offset\n  }\n  resizeBuffer(length)\n  var start = bufferOffset\n  list[0].copy(bufferPool, start, parser.bigOffset, list[0].length)\n  bufferOffset += list[0].length - parser.bigOffset\n  for (var i = 1; i < chunks - 1; i++) {\n    list[i].copy(bufferPool, bufferOffset)\n    bufferOffset += list[i].length\n  }\n  list[i].copy(bufferPool, bufferOffset, 0, offset - 2)\n  bufferOffset += offset - 2\n  return bufferPool.slice(start, bufferOffset)\n}\n\n/**\n * Parse the redis buffer\n * @param buffer\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.execute = function execute (buffer) {\n  if (this.buffer === null) {\n    this.buffer = buffer\n    this.offset = 0\n  } else if (this.bigStrSize === 0) {\n    var oldLength = this.buffer.length\n    var remainingLength = oldLength - this.offset\n    var newBuffer = bufferAlloc(remainingLength + buffer.length)\n    this.buffer.copy(newBuffer, 0, this.offset, oldLength)\n    buffer.copy(newBuffer, remainingLength, 0, buffer.length)\n    this.buffer = newBuffer\n    this.offset = 0\n    if (this.arrayCache.length) {\n      var arr = parseArrayChunks(this)\n      if (!arr) {\n        return\n      }\n      this.returnReply(arr)\n    }\n  } else if (this.totalChunkSize + buffer.length >= this.bigStrSize) {\n    this.bufferCache.push(buffer)\n    var tmp = this.optionReturnBuffers ? concatBulkBuffer(this) : concatBulkString(this)\n    this.bigStrSize = 0\n    this.bufferCache = []\n    this.buffer = buffer\n    if (this.arrayCache.length) {\n      this.arrayCache[0][this.arrayPos[0]++] = tmp\n      tmp = parseArrayChunks(this)\n      if (!tmp) {\n        return\n      }\n    }\n    this.returnReply(tmp)\n  } else {\n    this.bufferCache.push(buffer)\n    this.totalChunkSize += buffer.length\n    return\n  }\n\n  while (this.offset < this.buffer.length) {\n    var offset = this.offset\n    var type = this.buffer[this.offset++]\n    var response = parseType(this, type)\n    if (response === undefined) {\n      if (!this.arrayCache.length) {\n        this.offset = offset\n      }\n      return\n    }\n\n    if (type === 45) {\n      this.returnError(response)\n    } else {\n      this.returnReply(response)\n    }\n  }\n\n  this.buffer = null\n}\n\nmodule.exports = JavascriptRedisParser\n\n\n//# sourceURL=webpack:///./node_modules/redis-parser/lib/parser.js?");

/***/ }),

/***/ "./node_modules/redis-parser/lib/parserError.js":
/*!******************************************************!*\
  !*** ./node_modules/redis-parser/lib/parserError.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! util */ \"util\")\nvar assert = __webpack_require__(/*! assert */ \"assert\")\nvar RedisError = __webpack_require__(/*! ./redisError */ \"./node_modules/redis-parser/lib/redisError.js\")\nvar ADD_STACKTRACE = false\n\nfunction ParserError (message, buffer, offset) {\n  assert(buffer)\n  assert.strictEqual(typeof offset, 'number')\n  RedisError.call(this, message, ADD_STACKTRACE)\n  this.offset = offset\n  this.buffer = buffer\n  Error.captureStackTrace(this, ParserError)\n}\n\nutil.inherits(ParserError, RedisError)\n\nObject.defineProperty(ParserError.prototype, 'name', {\n  value: 'ParserError',\n  configurable: true,\n  writable: true\n})\n\nmodule.exports = ParserError\n\n\n//# sourceURL=webpack:///./node_modules/redis-parser/lib/parserError.js?");

/***/ }),

/***/ "./node_modules/redis-parser/lib/redisError.js":
/*!*****************************************************!*\
  !*** ./node_modules/redis-parser/lib/redisError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! util */ \"util\")\n\nfunction RedisError (message, stack) {\n  Object.defineProperty(this, 'message', {\n    value: message || '',\n    configurable: true,\n    writable: true\n  })\n  if (stack || stack === undefined) {\n    Error.captureStackTrace(this, RedisError)\n  }\n}\n\nutil.inherits(RedisError, Error)\n\nObject.defineProperty(RedisError.prototype, 'name', {\n  value: 'RedisError',\n  configurable: true,\n  writable: true\n})\n\nmodule.exports = RedisError\n\n\n//# sourceURL=webpack:///./node_modules/redis-parser/lib/redisError.js?");

/***/ }),

/***/ "./node_modules/redis-parser/lib/replyError.js":
/*!*****************************************************!*\
  !*** ./node_modules/redis-parser/lib/replyError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! util */ \"util\")\nvar RedisError = __webpack_require__(/*! ./redisError */ \"./node_modules/redis-parser/lib/redisError.js\")\nvar ADD_STACKTRACE = false\n\nfunction ReplyError (message) {\n  var tmp = Error.stackTraceLimit\n  Error.stackTraceLimit = 2\n  RedisError.call(this, message, ADD_STACKTRACE)\n  Error.captureStackTrace(this, ReplyError)\n  Error.stackTraceLimit = tmp\n}\n\nutil.inherits(ReplyError, RedisError)\n\nObject.defineProperty(ReplyError.prototype, 'name', {\n  value: 'ReplyError',\n  configurable: true,\n  writable: true\n})\n\nmodule.exports = ReplyError\n\n\n//# sourceURL=webpack:///./node_modules/redis-parser/lib/replyError.js?");

/***/ }),

/***/ "./node_modules/redis/index.js":
/*!*************************************!*\
  !*** ./node_modules/redis/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar net = __webpack_require__(/*! net */ \"net\");\nvar tls = __webpack_require__(/*! tls */ \"tls\");\nvar util = __webpack_require__(/*! util */ \"util\");\nvar utils = __webpack_require__(/*! ./lib/utils */ \"./node_modules/redis/lib/utils.js\");\nvar Command = __webpack_require__(/*! ./lib/command */ \"./node_modules/redis/lib/command.js\");\nvar Queue = __webpack_require__(/*! double-ended-queue */ \"./node_modules/double-ended-queue/js/deque.js\");\nvar errorClasses = __webpack_require__(/*! ./lib/customErrors */ \"./node_modules/redis/lib/customErrors.js\");\nvar EventEmitter = __webpack_require__(/*! events */ \"events\");\nvar Parser = __webpack_require__(/*! redis-parser */ \"./node_modules/redis-parser/index.js\");\nvar commands = __webpack_require__(/*! redis-commands */ \"./node_modules/redis-commands/index.js\");\nvar debug = __webpack_require__(/*! ./lib/debug */ \"./node_modules/redis/lib/debug.js\");\nvar unifyOptions = __webpack_require__(/*! ./lib/createClient */ \"./node_modules/redis/lib/createClient.js\");\nvar SUBSCRIBE_COMMANDS = {\n    subscribe: true,\n    unsubscribe: true,\n    psubscribe: true,\n    punsubscribe: true\n};\n\n// Newer Node.js versions > 0.10 return the EventEmitter right away and using .EventEmitter was deprecated\nif (typeof EventEmitter !== 'function') {\n    EventEmitter = EventEmitter.EventEmitter;\n}\n\nfunction noop () {}\n\nfunction handle_detect_buffers_reply (reply, command, buffer_args) {\n    if (buffer_args === false || this.message_buffers) {\n        // If detect_buffers option was specified, then the reply from the parser will be a buffer.\n        // If this command did not use Buffer arguments, then convert the reply to Strings here.\n        reply = utils.reply_to_strings(reply);\n    }\n\n    if (command === 'hgetall') {\n        reply = utils.reply_to_object(reply);\n    }\n    return reply;\n}\n\nexports.debug_mode = /\\bredis\\b/i.test(process.env.NODE_DEBUG);\n\n// Attention: The second parameter might be removed at will and is not officially supported.\n// Do not rely on this\nfunction RedisClient (options, stream) {\n    // Copy the options so they are not mutated\n    options = utils.clone(options);\n    EventEmitter.call(this);\n    var cnx_options = {};\n    var self = this;\n    /* istanbul ignore next: travis does not work with stunnel atm. Therefore the tls tests are skipped on travis */\n    for (var tls_option in options.tls) {\n        cnx_options[tls_option] = options.tls[tls_option];\n        // Copy the tls options into the general options to make sure the address is set right\n        if (tls_option === 'port' || tls_option === 'host' || tls_option === 'path' || tls_option === 'family') {\n            options[tls_option] = options.tls[tls_option];\n        }\n    }\n    if (stream) {\n        // The stream from the outside is used so no connection from this side is triggered but from the server this client should talk to\n        // Reconnect etc won't work with this. This requires monkey patching to work, so it is not officially supported\n        options.stream = stream;\n        this.address = '\"Private stream\"';\n    } else if (options.path) {\n        cnx_options.path = options.path;\n        this.address = options.path;\n    } else {\n        cnx_options.port = +options.port || 6379;\n        cnx_options.host = options.host || '127.0.0.1';\n        cnx_options.family = (!options.family && net.isIP(cnx_options.host)) || (options.family === 'IPv6' ? 6 : 4);\n        this.address = cnx_options.host + ':' + cnx_options.port;\n    }\n    // Warn on misusing deprecated functions\n    if (typeof options.retry_strategy === 'function') {\n        if ('max_attempts' in options) {\n            self.warn('WARNING: You activated the retry_strategy and max_attempts at the same time. This is not possible and max_attempts will be ignored.');\n            // Do not print deprecation warnings twice\n            delete options.max_attempts;\n        }\n        if ('retry_max_delay' in options) {\n            self.warn('WARNING: You activated the retry_strategy and retry_max_delay at the same time. This is not possible and retry_max_delay will be ignored.');\n            // Do not print deprecation warnings twice\n            delete options.retry_max_delay;\n        }\n    }\n\n    this.connection_options = cnx_options;\n    this.connection_id = RedisClient.connection_id++;\n    this.connected = false;\n    this.ready = false;\n    if (options.socket_nodelay === undefined) {\n        options.socket_nodelay = true;\n    } else if (!options.socket_nodelay) { // Only warn users with this set to false\n        self.warn(\n            'socket_nodelay is deprecated and will be removed in v.3.0.0.\\n' +\n            'Setting socket_nodelay to false likely results in a reduced throughput. Please use .batch for pipelining instead.\\n' +\n            'If you are sure you rely on the NAGLE-algorithm you can activate it by calling client.stream.setNoDelay(false) instead.'\n        );\n    }\n    if (options.socket_keepalive === undefined) {\n        options.socket_keepalive = true;\n    }\n    for (var command in options.rename_commands) {\n        options.rename_commands[command.toLowerCase()] = options.rename_commands[command];\n    }\n    options.return_buffers = !!options.return_buffers;\n    options.detect_buffers = !!options.detect_buffers;\n    // Override the detect_buffers setting if return_buffers is active and print a warning\n    if (options.return_buffers && options.detect_buffers) {\n        self.warn('WARNING: You activated return_buffers and detect_buffers at the same time. The return value is always going to be a buffer.');\n        options.detect_buffers = false;\n    }\n    if (options.detect_buffers) {\n        // We only need to look at the arguments if we do not know what we have to return\n        this.handle_reply = handle_detect_buffers_reply;\n    }\n    this.should_buffer = false;\n    this.max_attempts = options.max_attempts | 0;\n    if ('max_attempts' in options) {\n        self.warn(\n            'max_attempts is deprecated and will be removed in v.3.0.0.\\n' +\n            'To reduce the number of options and to improve the reconnection handling please use the new `retry_strategy` option instead.\\n' +\n            'This replaces the max_attempts and retry_max_delay option.'\n        );\n    }\n    this.command_queue = new Queue(); // Holds sent commands to de-pipeline them\n    this.offline_queue = new Queue(); // Holds commands issued but not able to be sent\n    this.pipeline_queue = new Queue(); // Holds all pipelined commands\n    // ATTENTION: connect_timeout should change in v.3.0 so it does not count towards ending reconnection attempts after x seconds\n    // This should be done by the retry_strategy. Instead it should only be the timeout for connecting to redis\n    this.connect_timeout = +options.connect_timeout || 3600000; // 60 * 60 * 1000 ms\n    this.enable_offline_queue = options.enable_offline_queue === false ? false : true;\n    this.retry_max_delay = +options.retry_max_delay || null;\n    if ('retry_max_delay' in options) {\n        self.warn(\n            'retry_max_delay is deprecated and will be removed in v.3.0.0.\\n' +\n            'To reduce the amount of options and the improve the reconnection handling please use the new `retry_strategy` option instead.\\n' +\n            'This replaces the max_attempts and retry_max_delay option.'\n        );\n    }\n    this.initialize_retry_vars();\n    this.pub_sub_mode = 0;\n    this.subscription_set = {};\n    this.monitoring = false;\n    this.message_buffers = false;\n    this.closing = false;\n    this.server_info = {};\n    this.auth_pass = options.auth_pass || options.password;\n    this.selected_db = options.db; // Save the selected db here, used when reconnecting\n    this.old_state = null;\n    this.fire_strings = true; // Determine if strings or buffers should be written to the stream\n    this.pipeline = false;\n    this.sub_commands_left = 0;\n    this.times_connected = 0;\n    this.buffers = options.return_buffers || options.detect_buffers;\n    this.options = options;\n    this.reply = 'ON'; // Returning replies is the default\n    this.create_stream();\n    // The listeners will not be attached right away, so let's print the deprecation message while the listener is attached\n    this.on('newListener', function (event) {\n        if (event === 'idle') {\n            this.warn(\n                'The idle event listener is deprecated and will likely be removed in v.3.0.0.\\n' +\n                'If you rely on this feature please open a new ticket in node_redis with your use case'\n            );\n        } else if (event === 'drain') {\n            this.warn(\n                'The drain event listener is deprecated and will be removed in v.3.0.0.\\n' +\n                'If you want to keep on listening to this event please listen to the stream drain event directly.'\n            );\n        } else if ((event === 'message_buffer' || event === 'pmessage_buffer' || event === 'messageBuffer' || event === 'pmessageBuffer') && !this.buffers && !this.message_buffers) {\n            if (this.reply_parser.name !== 'javascript') {\n                return this.warn(\n                    'You attached the \"' + event + '\" listener without the returnBuffers option set to true.\\n' +\n                    'Please use the JavaScript parser or set the returnBuffers option to true to return buffers.'\n                );\n            }\n            this.reply_parser.optionReturnBuffers = true;\n            this.message_buffers = true;\n            this.handle_reply = handle_detect_buffers_reply;\n        }\n    });\n}\nutil.inherits(RedisClient, EventEmitter);\n\nRedisClient.connection_id = 0;\n\nfunction create_parser (self) {\n    return new Parser({\n        returnReply: function (data) {\n            self.return_reply(data);\n        },\n        returnError: function (err) {\n            // Return a ReplyError to indicate Redis returned an error\n            self.return_error(err);\n        },\n        returnFatalError: function (err) {\n            // Error out all fired commands. Otherwise they might rely on faulty data. We have to reconnect to get in a working state again\n            // Note: the execution order is important. First flush and emit, then create the stream\n            err.message += '. Please report this.';\n            self.ready = false;\n            self.flush_and_error({\n                message: 'Fatal error encountert. Command aborted.',\n                code: 'NR_FATAL'\n            }, {\n                error: err,\n                queues: ['command_queue']\n            });\n            self.emit('error', err);\n            self.create_stream();\n        },\n        returnBuffers: self.buffers || self.message_buffers,\n        name: self.options.parser || 'javascript',\n        stringNumbers: self.options.string_numbers || false\n    });\n}\n\n/******************************************************************************\n\n    All functions in here are internal besides the RedisClient constructor\n    and the exported functions. Don't rely on them as they will be private\n    functions in node_redis v.3\n\n******************************************************************************/\n\n// Attention: the function name \"create_stream\" should not be changed, as other libraries need this to mock the stream (e.g. fakeredis)\nRedisClient.prototype.create_stream = function () {\n    var self = this;\n\n    // Init parser\n    this.reply_parser = create_parser(this);\n\n    if (this.options.stream) {\n        // Only add the listeners once in case of a reconnect try (that won't work)\n        if (this.stream) {\n            return;\n        }\n        this.stream = this.options.stream;\n    } else {\n        // On a reconnect destroy the former stream and retry\n        if (this.stream) {\n            this.stream.removeAllListeners();\n            this.stream.destroy();\n        }\n\n        /* istanbul ignore if: travis does not work with stunnel atm. Therefore the tls tests are skipped on travis */\n        if (this.options.tls) {\n            this.stream = tls.connect(this.connection_options);\n        } else {\n            this.stream = net.createConnection(this.connection_options);\n        }\n    }\n\n    if (this.options.connect_timeout) {\n        this.stream.setTimeout(this.connect_timeout, function () {\n            // Note: This is only tested if a internet connection is established\n            self.retry_totaltime = self.connect_timeout;\n            self.connection_gone('timeout');\n        });\n    }\n\n    /* istanbul ignore next: travis does not work with stunnel atm. Therefore the tls tests are skipped on travis */\n    var connect_event = this.options.tls ? 'secureConnect' : 'connect';\n    this.stream.once(connect_event, function () {\n        this.removeAllListeners('timeout');\n        self.times_connected++;\n        self.on_connect();\n    });\n\n    this.stream.on('data', function (buffer_from_socket) {\n        // The buffer_from_socket.toString() has a significant impact on big chunks and therefore this should only be used if necessary\n        debug('Net read ' + self.address + ' id ' + self.connection_id); // + ': ' + buffer_from_socket.toString());\n        self.reply_parser.execute(buffer_from_socket);\n        self.emit_idle();\n    });\n\n    this.stream.on('error', function (err) {\n        self.on_error(err);\n    });\n\n    /* istanbul ignore next: difficult to test and not important as long as we keep this listener */\n    this.stream.on('clientError', function (err) {\n        debug('clientError occured');\n        self.on_error(err);\n    });\n\n    this.stream.once('close', function (hadError) {\n        self.connection_gone('close');\n    });\n\n    this.stream.once('end', function () {\n        self.connection_gone('end');\n    });\n\n    this.stream.on('drain', function () {\n        self.drain();\n    });\n\n    if (this.options.socket_nodelay) {\n        this.stream.setNoDelay();\n    }\n\n    // Fire the command before redis is connected to be sure it's the first fired command\n    if (this.auth_pass !== undefined) {\n        this.ready = true;\n        // Fail silently as we might not be able to connect\n        this.auth(this.auth_pass, function (err) {\n            if (err && err.code !== 'UNCERTAIN_STATE') {\n                self.emit('error', err);\n            }\n        });\n        this.ready = false;\n    }\n};\n\nRedisClient.prototype.handle_reply = function (reply, command) {\n    if (command === 'hgetall') {\n        reply = utils.reply_to_object(reply);\n    }\n    return reply;\n};\n\nRedisClient.prototype.cork = noop;\nRedisClient.prototype.uncork = noop;\n\nRedisClient.prototype.initialize_retry_vars = function () {\n    this.retry_timer = null;\n    this.retry_totaltime = 0;\n    this.retry_delay = 200;\n    this.retry_backoff = 1.7;\n    this.attempts = 1;\n};\n\nRedisClient.prototype.warn = function (msg) {\n    var self = this;\n    // Warn on the next tick. Otherwise no event listener can be added\n    // for warnings that are emitted in the redis client constructor\n    process.nextTick(function () {\n        if (self.listeners('warning').length !== 0) {\n            self.emit('warning', msg);\n        } else {\n            console.warn('node_redis:', msg);\n        }\n    });\n};\n\n// Flush provided queues, erroring any items with a callback first\nRedisClient.prototype.flush_and_error = function (error_attributes, options) {\n    options = options || {};\n    var aggregated_errors = [];\n    var queue_names = options.queues || ['command_queue', 'offline_queue']; // Flush the command_queue first to keep the order intakt\n    for (var i = 0; i < queue_names.length; i++) {\n        // If the command was fired it might have been processed so far\n        if (queue_names[i] === 'command_queue') {\n            error_attributes.message += ' It might have been processed.';\n        } else { // As the command_queue is flushed first, remove this for the offline queue\n            error_attributes.message = error_attributes.message.replace(' It might have been processed.', '');\n        }\n        // Don't flush everything from the queue\n        for (var command_obj = this[queue_names[i]].shift(); command_obj; command_obj = this[queue_names[i]].shift()) {\n            var err = new errorClasses.AbortError(error_attributes);\n            if (command_obj.error) {\n                err.stack = err.stack + command_obj.error.stack.replace(/^Error.*?\\n/, '\\n');\n            }\n            err.command = command_obj.command.toUpperCase();\n            if (command_obj.args && command_obj.args.length) {\n                err.args = command_obj.args;\n            }\n            if (options.error) {\n                err.origin = options.error;\n            }\n            if (typeof command_obj.callback === 'function') {\n                command_obj.callback(err);\n            } else {\n                aggregated_errors.push(err);\n            }\n        }\n    }\n    // Currently this would be a breaking change, therefore it's only emitted in debug_mode\n    if (exports.debug_mode && aggregated_errors.length) {\n        var error;\n        if (aggregated_errors.length === 1) {\n            error = aggregated_errors[0];\n        } else {\n            error_attributes.message = error_attributes.message.replace('It', 'They').replace(/command/i, '$&s');\n            error = new errorClasses.AggregateError(error_attributes);\n            error.errors = aggregated_errors;\n        }\n        this.emit('error', error);\n    }\n};\n\nRedisClient.prototype.on_error = function (err) {\n    if (this.closing) {\n        return;\n    }\n\n    err.message = 'Redis connection to ' + this.address + ' failed - ' + err.message;\n    debug(err.message);\n    this.connected = false;\n    this.ready = false;\n\n    // Only emit the error if the retry_stategy option is not set\n    if (!this.options.retry_strategy) {\n        this.emit('error', err);\n    }\n    // 'error' events get turned into exceptions if they aren't listened for. If the user handled this error\n    // then we should try to reconnect.\n    this.connection_gone('error', err);\n};\n\nRedisClient.prototype.on_connect = function () {\n    debug('Stream connected ' + this.address + ' id ' + this.connection_id);\n\n    this.connected = true;\n    this.ready = false;\n    this.emitted_end = false;\n    this.stream.setKeepAlive(this.options.socket_keepalive);\n    this.stream.setTimeout(0);\n\n    this.emit('connect');\n    this.initialize_retry_vars();\n\n    if (this.options.no_ready_check) {\n        this.on_ready();\n    } else {\n        this.ready_check();\n    }\n};\n\nRedisClient.prototype.on_ready = function () {\n    var self = this;\n\n    debug('on_ready called ' + this.address + ' id ' + this.connection_id);\n    this.ready = true;\n\n    this.cork = function () {\n        self.pipeline = true;\n        if (self.stream.cork) {\n            self.stream.cork();\n        }\n    };\n    this.uncork = function () {\n        if (self.fire_strings) {\n            self.write_strings();\n        } else {\n            self.write_buffers();\n        }\n        self.pipeline = false;\n        self.fire_strings = true;\n        if (self.stream.uncork) {\n            // TODO: Consider using next tick here. See https://github.com/NodeRedis/node_redis/issues/1033\n            self.stream.uncork();\n        }\n    };\n\n    // Restore modal commands from previous connection. The order of the commands is important\n    if (this.selected_db !== undefined) {\n        this.internal_send_command(new Command('select', [this.selected_db]));\n    }\n    if (this.monitoring) { // Monitor has to be fired before pub sub commands\n        this.internal_send_command(new Command('monitor', []));\n    }\n    var callback_count = Object.keys(this.subscription_set).length;\n    if (!this.options.disable_resubscribing && callback_count) {\n        // only emit 'ready' when all subscriptions were made again\n        // TODO: Remove the countdown for ready here. This is not coherent with all other modes and should therefore not be handled special\n        // We know we are ready as soon as all commands were fired\n        var callback = function () {\n            callback_count--;\n            if (callback_count === 0) {\n                self.emit('ready');\n            }\n        };\n        debug('Sending pub/sub on_ready commands');\n        for (var key in this.subscription_set) {\n            var command = key.slice(0, key.indexOf('_'));\n            var args = this.subscription_set[key];\n            this[command]([args], callback);\n        }\n        this.send_offline_queue();\n        return;\n    }\n    this.send_offline_queue();\n    this.emit('ready');\n};\n\nRedisClient.prototype.on_info_cmd = function (err, res) {\n    if (err) {\n        if (err.message === \"ERR unknown command 'info'\") {\n            this.on_ready();\n            return;\n        }\n        err.message = 'Ready check failed: ' + err.message;\n        this.emit('error', err);\n        return;\n    }\n\n    /* istanbul ignore if: some servers might not respond with any info data. This is just a safety check that is difficult to test */\n    if (!res) {\n        debug('The info command returned without any data.');\n        this.on_ready();\n        return;\n    }\n\n    if (!this.server_info.loading || this.server_info.loading === '0') {\n        // If the master_link_status exists but the link is not up, try again after 50 ms\n        if (this.server_info.master_link_status && this.server_info.master_link_status !== 'up') {\n            this.server_info.loading_eta_seconds = 0.05;\n        } else {\n            // Eta loading should change\n            debug('Redis server ready.');\n            this.on_ready();\n            return;\n        }\n    }\n\n    var retry_time = +this.server_info.loading_eta_seconds * 1000;\n    if (retry_time > 1000) {\n        retry_time = 1000;\n    }\n    debug('Redis server still loading, trying again in ' + retry_time);\n    setTimeout(function (self) {\n        self.ready_check();\n    }, retry_time, this);\n};\n\nRedisClient.prototype.ready_check = function () {\n    var self = this;\n    debug('Checking server ready state...');\n    // Always fire this info command as first command even if other commands are already queued up\n    this.ready = true;\n    this.info(function (err, res) {\n        self.on_info_cmd(err, res);\n    });\n    this.ready = false;\n};\n\nRedisClient.prototype.send_offline_queue = function () {\n    for (var command_obj = this.offline_queue.shift(); command_obj; command_obj = this.offline_queue.shift()) {\n        debug('Sending offline command: ' + command_obj.command);\n        this.internal_send_command(command_obj);\n    }\n    this.drain();\n};\n\nvar retry_connection = function (self, error) {\n    debug('Retrying connection...');\n\n    var reconnect_params = {\n        delay: self.retry_delay,\n        attempt: self.attempts,\n        error: error\n    };\n    if (self.options.camel_case) {\n        reconnect_params.totalRetryTime = self.retry_totaltime;\n        reconnect_params.timesConnected = self.times_connected;\n    } else {\n        reconnect_params.total_retry_time = self.retry_totaltime;\n        reconnect_params.times_connected = self.times_connected;\n    }\n    self.emit('reconnecting', reconnect_params);\n\n    self.retry_totaltime += self.retry_delay;\n    self.attempts += 1;\n    self.retry_delay = Math.round(self.retry_delay * self.retry_backoff);\n    self.create_stream();\n    self.retry_timer = null;\n};\n\nRedisClient.prototype.connection_gone = function (why, error) {\n    // If a retry is already in progress, just let that happen\n    if (this.retry_timer) {\n        return;\n    }\n    error = error || null;\n\n    debug('Redis connection is gone from ' + why + ' event.');\n    this.connected = false;\n    this.ready = false;\n    // Deactivate cork to work with the offline queue\n    this.cork = noop;\n    this.uncork = noop;\n    this.pipeline = false;\n    this.pub_sub_mode = 0;\n\n    // since we are collapsing end and close, users don't expect to be called twice\n    if (!this.emitted_end) {\n        this.emit('end');\n        this.emitted_end = true;\n    }\n\n    // If this is a requested shutdown, then don't retry\n    if (this.closing) {\n        debug('Connection ended by quit / end command, not retrying.');\n        this.flush_and_error({\n            message: 'Stream connection ended and command aborted.',\n            code: 'NR_CLOSED'\n        }, {\n            error: error\n        });\n        return;\n    }\n\n    if (typeof this.options.retry_strategy === 'function') {\n        var retry_params = {\n            attempt: this.attempts,\n            error: error\n        };\n        if (this.options.camel_case) {\n            retry_params.totalRetryTime = this.retry_totaltime;\n            retry_params.timesConnected = this.times_connected;\n        } else {\n            retry_params.total_retry_time = this.retry_totaltime;\n            retry_params.times_connected = this.times_connected;\n        }\n        this.retry_delay = this.options.retry_strategy(retry_params);\n        if (typeof this.retry_delay !== 'number') {\n            // Pass individual error through\n            if (this.retry_delay instanceof Error) {\n                error = this.retry_delay;\n            }\n            this.flush_and_error({\n                message: 'Stream connection ended and command aborted.',\n                code: 'NR_CLOSED'\n            }, {\n                error: error\n            });\n            this.end(false);\n            return;\n        }\n    }\n\n    if (this.max_attempts !== 0 && this.attempts >= this.max_attempts || this.retry_totaltime >= this.connect_timeout) {\n        var message = 'Redis connection in broken state: ';\n        if (this.retry_totaltime >= this.connect_timeout) {\n            message += 'connection timeout exceeded.';\n        } else {\n            message += 'maximum connection attempts exceeded.';\n        }\n\n        this.flush_and_error({\n            message: message,\n            code: 'CONNECTION_BROKEN',\n        }, {\n            error: error\n        });\n        var err = new Error(message);\n        err.code = 'CONNECTION_BROKEN';\n        if (error) {\n            err.origin = error;\n        }\n        this.emit('error', err);\n        this.end(false);\n        return;\n    }\n\n    // Retry commands after a reconnect instead of throwing an error. Use this with caution\n    if (this.options.retry_unfulfilled_commands) {\n        this.offline_queue.unshift.apply(this.offline_queue, this.command_queue.toArray());\n        this.command_queue.clear();\n    } else if (this.command_queue.length !== 0) {\n        this.flush_and_error({\n            message: 'Redis connection lost and command aborted.',\n            code: 'UNCERTAIN_STATE'\n        }, {\n            error: error,\n            queues: ['command_queue']\n        });\n    }\n\n    if (this.retry_max_delay !== null && this.retry_delay > this.retry_max_delay) {\n        this.retry_delay = this.retry_max_delay;\n    } else if (this.retry_totaltime + this.retry_delay > this.connect_timeout) {\n        // Do not exceed the maximum\n        this.retry_delay = this.connect_timeout - this.retry_totaltime;\n    }\n\n    debug('Retry connection in ' + this.retry_delay + ' ms');\n\n    this.retry_timer = setTimeout(retry_connection, this.retry_delay, this, error);\n};\n\nRedisClient.prototype.return_error = function (err) {\n    var command_obj = this.command_queue.shift();\n    if (command_obj.error) {\n        err.stack = command_obj.error.stack.replace(/^Error.*?\\n/, 'ReplyError: ' + err.message + '\\n');\n    }\n    err.command = command_obj.command.toUpperCase();\n    if (command_obj.args && command_obj.args.length) {\n        err.args = command_obj.args;\n    }\n\n    // Count down pub sub mode if in entering modus\n    if (this.pub_sub_mode > 1) {\n        this.pub_sub_mode--;\n    }\n\n    var match = err.message.match(utils.err_code);\n    // LUA script could return user errors that don't behave like all other errors!\n    if (match) {\n        err.code = match[1];\n    }\n\n    utils.callback_or_emit(this, command_obj.callback, err);\n};\n\nRedisClient.prototype.drain = function () {\n    this.emit('drain');\n    this.should_buffer = false;\n};\n\nRedisClient.prototype.emit_idle = function () {\n    if (this.command_queue.length === 0 && this.pub_sub_mode === 0) {\n        this.emit('idle');\n    }\n};\n\nfunction normal_reply (self, reply) {\n    var command_obj = self.command_queue.shift();\n    if (typeof command_obj.callback === 'function') {\n        if (command_obj.command !== 'exec') {\n            reply = self.handle_reply(reply, command_obj.command, command_obj.buffer_args);\n        }\n        command_obj.callback(null, reply);\n    } else {\n        debug('No callback for reply');\n    }\n}\n\nfunction subscribe_unsubscribe (self, reply, type) {\n    // Subscribe commands take an optional callback and also emit an event, but only the _last_ response is included in the callback\n    // The pub sub commands return each argument in a separate return value and have to be handled that way\n    var command_obj = self.command_queue.get(0);\n    var buffer = self.options.return_buffers || self.options.detect_buffers && command_obj.buffer_args;\n    var channel = (buffer || reply[1] === null) ? reply[1] : reply[1].toString();\n    var count = +reply[2]; // Return the channel counter as number no matter if `string_numbers` is activated or not\n    debug(type, channel);\n\n    // Emit first, then return the callback\n    if (channel !== null) { // Do not emit or \"unsubscribe\" something if there was no channel to unsubscribe from\n        self.emit(type, channel, count);\n        if (type === 'subscribe' || type === 'psubscribe') {\n            self.subscription_set[type + '_' + channel] = channel;\n        } else {\n            type = type === 'unsubscribe' ? 'subscribe' : 'psubscribe'; // Make types consistent\n            delete self.subscription_set[type + '_' + channel];\n        }\n    }\n\n    if (command_obj.args.length === 1 || self.sub_commands_left === 1 || command_obj.args.length === 0 && (count === 0 || channel === null)) {\n        if (count === 0) { // unsubscribed from all channels\n            var running_command;\n            var i = 1;\n            self.pub_sub_mode = 0; // Deactivating pub sub mode\n            // This should be a rare case and therefore handling it this way should be good performance wise for the general case\n            while (running_command = self.command_queue.get(i)) {\n                if (SUBSCRIBE_COMMANDS[running_command.command]) {\n                    self.pub_sub_mode = i; // Entering pub sub mode again\n                    break;\n                }\n                i++;\n            }\n        }\n        self.command_queue.shift();\n        if (typeof command_obj.callback === 'function') {\n            // TODO: The current return value is pretty useless.\n            // Evaluate to change this in v.3 to return all subscribed / unsubscribed channels in an array including the number of channels subscribed too\n            command_obj.callback(null, channel);\n        }\n        self.sub_commands_left = 0;\n    } else {\n        if (self.sub_commands_left !== 0) {\n            self.sub_commands_left--;\n        } else {\n            self.sub_commands_left = command_obj.args.length ? command_obj.args.length - 1 : count;\n        }\n    }\n}\n\nfunction return_pub_sub (self, reply) {\n    var type = reply[0].toString();\n    if (type === 'message') { // channel, message\n        if (!self.options.return_buffers || self.message_buffers) { // backwards compatible. Refactor this in v.3 to always return a string on the normal emitter\n            self.emit('message', reply[1].toString(), reply[2].toString());\n            self.emit('message_buffer', reply[1], reply[2]);\n            self.emit('messageBuffer', reply[1], reply[2]);\n        } else {\n            self.emit('message', reply[1], reply[2]);\n        }\n    } else if (type === 'pmessage') { // pattern, channel, message\n        if (!self.options.return_buffers || self.message_buffers) { // backwards compatible. Refactor this in v.3 to always return a string on the normal emitter\n            self.emit('pmessage', reply[1].toString(), reply[2].toString(), reply[3].toString());\n            self.emit('pmessage_buffer', reply[1], reply[2], reply[3]);\n            self.emit('pmessageBuffer', reply[1], reply[2], reply[3]);\n        } else {\n            self.emit('pmessage', reply[1], reply[2], reply[3]);\n        }\n    } else {\n        subscribe_unsubscribe(self, reply, type);\n    }\n}\n\nRedisClient.prototype.return_reply = function (reply) {\n    if (this.monitoring) {\n        var replyStr;\n        if (this.buffers && Buffer.isBuffer(reply)) {\n            replyStr = reply.toString();\n        } else {\n            replyStr = reply;\n        }\n        // If in monitor mode, all normal commands are still working and we only want to emit the streamlined commands\n        if (typeof replyStr === 'string' && utils.monitor_regex.test(replyStr)) {\n            var timestamp = replyStr.slice(0, replyStr.indexOf(' '));\n            var args = replyStr.slice(replyStr.indexOf('\"') + 1, -1).split('\" \"').map(function (elem) {\n                return elem.replace(/\\\\\"/g, '\"');\n            });\n            this.emit('monitor', timestamp, args, replyStr);\n            return;\n        }\n    }\n    if (this.pub_sub_mode === 0) {\n        normal_reply(this, reply);\n    } else if (this.pub_sub_mode !== 1) {\n        this.pub_sub_mode--;\n        normal_reply(this, reply);\n    } else if (!(reply instanceof Array) || reply.length <= 2) {\n        // Only PING and QUIT are allowed in this context besides the pub sub commands\n        // Ping replies with ['pong', null|value] and quit with 'OK'\n        normal_reply(this, reply);\n    } else {\n        return_pub_sub(this, reply);\n    }\n};\n\nfunction handle_offline_command (self, command_obj) {\n    var command = command_obj.command;\n    var err, msg;\n    if (self.closing || !self.enable_offline_queue) {\n        command = command.toUpperCase();\n        if (!self.closing) {\n            if (self.stream.writable) {\n                msg = 'The connection is not yet established and the offline queue is deactivated.';\n            } else {\n                msg = 'Stream not writeable.';\n            }\n        } else {\n            msg = 'The connection is already closed.';\n        }\n        err = new errorClasses.AbortError({\n            message: command + \" can't be processed. \" + msg,\n            code: 'NR_CLOSED',\n            command: command\n        });\n        if (command_obj.args.length) {\n            err.args = command_obj.args;\n        }\n        utils.reply_in_order(self, command_obj.callback, err);\n    } else {\n        debug('Queueing ' + command + ' for next server connection.');\n        self.offline_queue.push(command_obj);\n    }\n    self.should_buffer = true;\n}\n\n// Do not call internal_send_command directly, if you are not absolutly certain it handles everything properly\n// e.g. monitor / info does not work with internal_send_command only\nRedisClient.prototype.internal_send_command = function (command_obj) {\n    var arg, prefix_keys;\n    var i = 0;\n    var command_str = '';\n    var args = command_obj.args;\n    var command = command_obj.command;\n    var len = args.length;\n    var big_data = false;\n    var args_copy = new Array(len);\n\n    if (process.domain && command_obj.callback) {\n        command_obj.callback = process.domain.bind(command_obj.callback);\n    }\n\n    if (this.ready === false || this.stream.writable === false) {\n        // Handle offline commands right away\n        handle_offline_command(this, command_obj);\n        return false; // Indicate buffering\n    }\n\n    for (i = 0; i < len; i += 1) {\n        if (typeof args[i] === 'string') {\n            // 30000 seemed to be a good value to switch to buffers after testing and checking the pros and cons\n            if (args[i].length > 30000) {\n                big_data = true;\n                args_copy[i] = new Buffer(args[i], 'utf8');\n            } else {\n                args_copy[i] = args[i];\n            }\n        } else if (typeof args[i] === 'object') { // Checking for object instead of Buffer.isBuffer helps us finding data types that we can't handle properly\n            if (args[i] instanceof Date) { // Accept dates as valid input\n                args_copy[i] = args[i].toString();\n            } else if (args[i] === null) {\n                this.warn(\n                    'Deprecated: The ' + command.toUpperCase() + ' command contains a \"null\" argument.\\n' +\n                    'This is converted to a \"null\" string now and will return an error from v.3.0 on.\\n' +\n                    'Please handle this in your code to make sure everything works as you intended it to.'\n                );\n                args_copy[i] = 'null'; // Backwards compatible :/\n            } else if (Buffer.isBuffer(args[i])) {\n                args_copy[i] = args[i];\n                command_obj.buffer_args = true;\n                big_data = true;\n            } else {\n                this.warn(\n                    'Deprecated: The ' + command.toUpperCase() + ' command contains a argument of type ' + args[i].constructor.name + '.\\n' +\n                    'This is converted to \"' + args[i].toString() + '\" by using .toString() now and will return an error from v.3.0 on.\\n' +\n                    'Please handle this in your code to make sure everything works as you intended it to.'\n                );\n                args_copy[i] = args[i].toString(); // Backwards compatible :/\n            }\n        } else if (typeof args[i] === 'undefined') {\n            this.warn(\n                'Deprecated: The ' + command.toUpperCase() + ' command contains a \"undefined\" argument.\\n' +\n                'This is converted to a \"undefined\" string now and will return an error from v.3.0 on.\\n' +\n                'Please handle this in your code to make sure everything works as you intended it to.'\n            );\n            args_copy[i] = 'undefined'; // Backwards compatible :/\n        } else {\n            // Seems like numbers are converted fast using string concatenation\n            args_copy[i] = '' + args[i];\n        }\n    }\n\n    if (this.options.prefix) {\n        prefix_keys = commands.getKeyIndexes(command, args_copy);\n        for (i = prefix_keys.pop(); i !== undefined; i = prefix_keys.pop()) {\n            args_copy[i] = this.options.prefix + args_copy[i];\n        }\n    }\n    if (this.options.rename_commands && this.options.rename_commands[command]) {\n        command = this.options.rename_commands[command];\n    }\n    // Always use 'Multi bulk commands', but if passed any Buffer args, then do multiple writes, one for each arg.\n    // This means that using Buffers in commands is going to be slower, so use Strings if you don't already have a Buffer.\n    command_str = '*' + (len + 1) + '\\r\\n$' + command.length + '\\r\\n' + command + '\\r\\n';\n\n    if (big_data === false) { // Build up a string and send entire command in one write\n        for (i = 0; i < len; i += 1) {\n            arg = args_copy[i];\n            command_str += '$' + Buffer.byteLength(arg) + '\\r\\n' + arg + '\\r\\n';\n        }\n        debug('Send ' + this.address + ' id ' + this.connection_id + ': ' + command_str);\n        this.write(command_str);\n    } else {\n        debug('Send command (' + command_str + ') has Buffer arguments');\n        this.fire_strings = false;\n        this.write(command_str);\n\n        for (i = 0; i < len; i += 1) {\n            arg = args_copy[i];\n            if (typeof arg === 'string') {\n                this.write('$' + Buffer.byteLength(arg) + '\\r\\n' + arg + '\\r\\n');\n            } else { // buffer\n                this.write('$' + arg.length + '\\r\\n');\n                this.write(arg);\n                this.write('\\r\\n');\n            }\n            debug('send_command: buffer send ' + arg.length + ' bytes');\n        }\n    }\n    if (command_obj.call_on_write) {\n        command_obj.call_on_write();\n    }\n    // Handle `CLIENT REPLY ON|OFF|SKIP`\n    // This has to be checked after call_on_write\n    /* istanbul ignore else: TODO: Remove this as soon as we test Redis 3.2 on travis */\n    if (this.reply === 'ON') {\n        this.command_queue.push(command_obj);\n    } else {\n        // Do not expect a reply\n        // Does this work in combination with the pub sub mode?\n        if (command_obj.callback) {\n            utils.reply_in_order(this, command_obj.callback, null, undefined, this.command_queue);\n        }\n        if (this.reply === 'SKIP') {\n            this.reply = 'SKIP_ONE_MORE';\n        } else if (this.reply === 'SKIP_ONE_MORE') {\n            this.reply = 'ON';\n        }\n    }\n    return !this.should_buffer;\n};\n\nRedisClient.prototype.write_strings = function () {\n    var str = '';\n    for (var command = this.pipeline_queue.shift(); command; command = this.pipeline_queue.shift()) {\n        // Write to stream if the string is bigger than 4mb. The biggest string may be Math.pow(2, 28) - 15 chars long\n        if (str.length + command.length > 4 * 1024 * 1024) {\n            this.should_buffer = !this.stream.write(str);\n            str = '';\n        }\n        str += command;\n    }\n    if (str !== '') {\n        this.should_buffer = !this.stream.write(str);\n    }\n};\n\nRedisClient.prototype.write_buffers = function () {\n    for (var command = this.pipeline_queue.shift(); command; command = this.pipeline_queue.shift()) {\n        this.should_buffer = !this.stream.write(command);\n    }\n};\n\nRedisClient.prototype.write = function (data) {\n    if (this.pipeline === false) {\n        this.should_buffer = !this.stream.write(data);\n        return;\n    }\n    this.pipeline_queue.push(data);\n};\n\nObject.defineProperty(exports, 'debugMode', {\n    get: function () {\n        return this.debug_mode;\n    },\n    set: function (val) {\n        this.debug_mode = val;\n    }\n});\n\n// Don't officially expose the command_queue directly but only the length as read only variable\nObject.defineProperty(RedisClient.prototype, 'command_queue_length', {\n    get: function () {\n        return this.command_queue.length;\n    }\n});\n\nObject.defineProperty(RedisClient.prototype, 'offline_queue_length', {\n    get: function () {\n        return this.offline_queue.length;\n    }\n});\n\n// Add support for camelCase by adding read only properties to the client\n// All known exposed snake_case variables are added here\nObject.defineProperty(RedisClient.prototype, 'retryDelay', {\n    get: function () {\n        return this.retry_delay;\n    }\n});\n\nObject.defineProperty(RedisClient.prototype, 'retryBackoff', {\n    get: function () {\n        return this.retry_backoff;\n    }\n});\n\nObject.defineProperty(RedisClient.prototype, 'commandQueueLength', {\n    get: function () {\n        return this.command_queue.length;\n    }\n});\n\nObject.defineProperty(RedisClient.prototype, 'offlineQueueLength', {\n    get: function () {\n        return this.offline_queue.length;\n    }\n});\n\nObject.defineProperty(RedisClient.prototype, 'shouldBuffer', {\n    get: function () {\n        return this.should_buffer;\n    }\n});\n\nObject.defineProperty(RedisClient.prototype, 'connectionId', {\n    get: function () {\n        return this.connection_id;\n    }\n});\n\nObject.defineProperty(RedisClient.prototype, 'serverInfo', {\n    get: function () {\n        return this.server_info;\n    }\n});\n\nexports.createClient = function () {\n    return new RedisClient(unifyOptions.apply(null, arguments));\n};\nexports.RedisClient = RedisClient;\nexports.print = utils.print;\nexports.Multi = __webpack_require__(/*! ./lib/multi */ \"./node_modules/redis/lib/multi.js\");\nexports.AbortError = errorClasses.AbortError;\nexports.RedisError = Parser.RedisError;\nexports.ParserError = Parser.ParserError;\nexports.ReplyError = Parser.ReplyError;\nexports.AggregateError = errorClasses.AggregateError;\n\n// Add all redis commands / node_redis api to the client\n__webpack_require__(/*! ./lib/individualCommands */ \"./node_modules/redis/lib/individualCommands.js\");\n__webpack_require__(/*! ./lib/extendedApi */ \"./node_modules/redis/lib/extendedApi.js\");\n\n//enables adding new commands (for modules and new commands)\nexports.addCommand = exports.add_command = __webpack_require__(/*! ./lib/commands */ \"./node_modules/redis/lib/commands.js\");\n\n//# sourceURL=webpack:///./node_modules/redis/index.js?");

/***/ }),

/***/ "./node_modules/redis/lib/command.js":
/*!*******************************************!*\
  !*** ./node_modules/redis/lib/command.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar betterStackTraces = /development/i.test(\"development\") || /\\bredis\\b/i.test(process.env.NODE_DEBUG);\n\nfunction Command (command, args, callback, call_on_write) {\n    this.command = command;\n    this.args = args;\n    this.buffer_args = false;\n    this.callback = callback;\n    this.call_on_write = call_on_write;\n    if (betterStackTraces) {\n        this.error = new Error();\n    }\n}\n\nmodule.exports = Command;\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/command.js?");

/***/ }),

/***/ "./node_modules/redis/lib/commands.js":
/*!********************************************!*\
  !*** ./node_modules/redis/lib/commands.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar commands = __webpack_require__(/*! redis-commands */ \"./node_modules/redis-commands/index.js\");\nvar Multi = __webpack_require__(/*! ./multi */ \"./node_modules/redis/lib/multi.js\");\nvar RedisClient = __webpack_require__(/*! ../ */ \"./node_modules/redis/index.js\").RedisClient;\nvar Command = __webpack_require__(/*! ./command */ \"./node_modules/redis/lib/command.js\");\n// Feature detect if a function may change it's name\nvar changeFunctionName = (function () {\n    var fn = function abc () {};\n    try {\n        Object.defineProperty(fn, 'name', {\n            value: 'foobar'\n        });\n        return true;\n    } catch (e) {\n        return false;\n    }\n}());\n\nvar addCommand = function (command) {\n    // Some rare Redis commands use special characters in their command name\n    // Convert those to a underscore to prevent using invalid function names\n    var commandName = command.replace(/(?:^([0-9])|[^a-zA-Z0-9_$])/g, '_$1');\n\n    // Do not override existing functions\n    if (!RedisClient.prototype[command]) {\n        RedisClient.prototype[command.toUpperCase()] = RedisClient.prototype[command] = function () {\n            var arr;\n            var len = arguments.length;\n            var callback;\n            var i = 0;\n            if (Array.isArray(arguments[0])) {\n                arr = arguments[0];\n                if (len === 2) {\n                    callback = arguments[1];\n                }\n            } else if (len > 1 && Array.isArray(arguments[1])) {\n                if (len === 3) {\n                    callback = arguments[2];\n                }\n                len = arguments[1].length;\n                arr = new Array(len + 1);\n                arr[0] = arguments[0];\n                for (; i < len; i += 1) {\n                    arr[i + 1] = arguments[1][i];\n                }\n            } else {\n                // The later should not be the average use case\n                if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n                    len--;\n                    callback = arguments[len];\n                }\n                arr = new Array(len);\n                for (; i < len; i += 1) {\n                    arr[i] = arguments[i];\n                }\n            }\n            return this.internal_send_command(new Command(command, arr, callback));\n        };\n        // Alias special function names (e.g. NR.RUN becomes NR_RUN and nr_run)\n        if (commandName !== command) {\n            RedisClient.prototype[commandName.toUpperCase()] = RedisClient.prototype[commandName] = RedisClient.prototype[command];\n        }\n        if (changeFunctionName) {\n            Object.defineProperty(RedisClient.prototype[command], 'name', {\n                value: commandName\n            });\n        }\n    }\n\n    // Do not override existing functions\n    if (!Multi.prototype[command]) {\n        Multi.prototype[command.toUpperCase()] = Multi.prototype[command] = function () {\n            var arr;\n            var len = arguments.length;\n            var callback;\n            var i = 0;\n            if (Array.isArray(arguments[0])) {\n                arr = arguments[0];\n                if (len === 2) {\n                    callback = arguments[1];\n                }\n            } else if (len > 1 && Array.isArray(arguments[1])) {\n                if (len === 3) {\n                    callback = arguments[2];\n                }\n                len = arguments[1].length;\n                arr = new Array(len + 1);\n                arr[0] = arguments[0];\n                for (; i < len; i += 1) {\n                    arr[i + 1] = arguments[1][i];\n                }\n            } else {\n                // The later should not be the average use case\n                if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n                    len--;\n                    callback = arguments[len];\n                }\n                arr = new Array(len);\n                for (; i < len; i += 1) {\n                    arr[i] = arguments[i];\n                }\n            }\n            this.queue.push(new Command(command, arr, callback));\n            return this;\n        };\n        // Alias special function names (e.g. NR.RUN becomes NR_RUN and nr_run)\n        if (commandName !== command) {\n            Multi.prototype[commandName.toUpperCase()] = Multi.prototype[commandName] = Multi.prototype[command];\n        }\n        if (changeFunctionName) {\n            Object.defineProperty(Multi.prototype[command], 'name', {\n                value: commandName\n            });\n        }\n    }\n};\n\ncommands.list.forEach(addCommand);\n\nmodule.exports = addCommand;\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/commands.js?");

/***/ }),

/***/ "./node_modules/redis/lib/createClient.js":
/*!************************************************!*\
  !*** ./node_modules/redis/lib/createClient.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/redis/lib/utils.js\");\nvar URL = __webpack_require__(/*! url */ \"url\");\n\nmodule.exports = function createClient (port_arg, host_arg, options) {\n\n    if (typeof port_arg === 'number' || typeof port_arg === 'string' && /^\\d+$/.test(port_arg)) {\n\n        var host;\n        if (typeof host_arg === 'string') {\n            host = host_arg;\n        } else {\n            if (options && host_arg) {\n                throw new TypeError('Unknown type of connection in createClient()');\n            }\n            options = options || host_arg;\n        }\n        options = utils.clone(options);\n        options.host = host || options.host;\n        options.port = port_arg;\n\n    } else if (typeof port_arg === 'string' || port_arg && port_arg.url) {\n\n        options = utils.clone(port_arg.url ? port_arg : host_arg || options);\n        var url = port_arg.url || port_arg;\n        var parsed = URL.parse(url, true, true);\n\n        // [redis:]//[[user][:password]@][host][:port][/db-number][?db=db-number[&password=bar[&option=value]]]\n        if (parsed.slashes) { // We require slashes\n            if (parsed.auth) {\n                options.password = parsed.auth.split(':')[1];\n            }\n            if (parsed.protocol && parsed.protocol !== 'redis:') {\n                console.warn('node_redis: WARNING: You passed \"' + parsed.protocol.substring(0, parsed.protocol.length - 1) + '\" as protocol instead of the \"redis\" protocol!');\n            }\n            if (parsed.pathname && parsed.pathname !== '/') {\n                options.db = parsed.pathname.substr(1);\n            }\n            if (parsed.hostname) {\n                options.host = parsed.hostname;\n            }\n            if (parsed.port) {\n                options.port = parsed.port;\n            }\n            if (parsed.search !== '') {\n                var elem;\n                for (elem in parsed.query) {\n                    // If options are passed twice, only the parsed options will be used\n                    if (elem in options) {\n                        if (options[elem] === parsed.query[elem]) {\n                            console.warn('node_redis: WARNING: You passed the ' + elem + ' option twice!');\n                        } else {\n                            throw new RangeError('The ' + elem + ' option is added twice and does not match');\n                        }\n                    }\n                    options[elem] = parsed.query[elem];\n                }\n            }\n        } else if (parsed.hostname) {\n            throw new RangeError('The redis url must begin with slashes \"//\" or contain slashes after the redis protocol');\n        } else {\n            options.path = url;\n        }\n\n    } else if (typeof port_arg === 'object' || port_arg === undefined) {\n        options = utils.clone(port_arg || options);\n        options.host = options.host || host_arg;\n\n        if (port_arg && arguments.length !== 1) {\n            throw new TypeError('To many arguments passed to createClient. Please only pass the options object');\n        }\n    }\n\n    if (!options) {\n        throw new TypeError('Unknown type of connection in createClient()');\n    }\n\n    return options;\n};\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/createClient.js?");

/***/ }),

/***/ "./node_modules/redis/lib/customErrors.js":
/*!************************************************!*\
  !*** ./node_modules/redis/lib/customErrors.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! util */ \"util\");\nvar assert = __webpack_require__(/*! assert */ \"assert\");\nvar RedisError = __webpack_require__(/*! redis-parser */ \"./node_modules/redis-parser/index.js\").RedisError;\nvar ADD_STACKTRACE = false;\n\nfunction AbortError (obj, stack) {\n    assert(obj, 'The options argument is required');\n    assert.strictEqual(typeof obj, 'object', 'The options argument has to be of type object');\n\n    RedisError.call(this, obj.message, ADD_STACKTRACE);\n    Object.defineProperty(this, 'message', {\n        value: obj.message || '',\n        configurable: true,\n        writable: true\n    });\n    if (stack || stack === undefined) {\n        Error.captureStackTrace(this, AbortError);\n    }\n    for (var keys = Object.keys(obj), key = keys.pop(); key; key = keys.pop()) {\n        this[key] = obj[key];\n    }\n}\n\nfunction AggregateError (obj) {\n    assert(obj, 'The options argument is required');\n    assert.strictEqual(typeof obj, 'object', 'The options argument has to be of type object');\n\n    AbortError.call(this, obj, ADD_STACKTRACE);\n    Object.defineProperty(this, 'message', {\n        value: obj.message || '',\n        configurable: true,\n        writable: true\n    });\n    Error.captureStackTrace(this, AggregateError);\n    for (var keys = Object.keys(obj), key = keys.pop(); key; key = keys.pop()) {\n        this[key] = obj[key];\n    }\n}\n\nutil.inherits(AbortError, RedisError);\nutil.inherits(AggregateError, AbortError);\n\nObject.defineProperty(AbortError.prototype, 'name', {\n    value: 'AbortError',\n    configurable: true,\n    writable: true\n});\nObject.defineProperty(AggregateError.prototype, 'name', {\n    value: 'AggregateError',\n    configurable: true,\n    writable: true\n});\n\nmodule.exports = {\n    AbortError: AbortError,\n    AggregateError: AggregateError\n};\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/customErrors.js?");

/***/ }),

/***/ "./node_modules/redis/lib/debug.js":
/*!*****************************************!*\
  !*** ./node_modules/redis/lib/debug.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar index = __webpack_require__(/*! ../ */ \"./node_modules/redis/index.js\");\n\nfunction debug () {\n    if (index.debug_mode) {\n        console.error.apply(null, arguments);\n    }\n}\n\nmodule.exports = debug;\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/debug.js?");

/***/ }),

/***/ "./node_modules/redis/lib/extendedApi.js":
/*!***********************************************!*\
  !*** ./node_modules/redis/lib/extendedApi.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/redis/lib/utils.js\");\nvar debug = __webpack_require__(/*! ./debug */ \"./node_modules/redis/lib/debug.js\");\nvar RedisClient = __webpack_require__(/*! ../ */ \"./node_modules/redis/index.js\").RedisClient;\nvar Command = __webpack_require__(/*! ./command */ \"./node_modules/redis/lib/command.js\");\nvar noop = function () {};\n\n/**********************************************\nAll documented and exposed API belongs in here\n**********************************************/\n\n// Redirect calls to the appropriate function and use to send arbitrary / not supported commands\nRedisClient.prototype.send_command = RedisClient.prototype.sendCommand = function (command, args, callback) {\n    // Throw to fail early instead of relying in order in this case\n    if (typeof command !== 'string') {\n        throw new TypeError('Wrong input type \"' + (command !== null && command !== undefined ? command.constructor.name : command) + '\" for command name');\n    }\n    command = command.toLowerCase();\n    if (!Array.isArray(args)) {\n        if (args === undefined || args === null) {\n            args = [];\n        } else if (typeof args === 'function' && callback === undefined) {\n            callback = args;\n            args = [];\n        } else {\n            throw new TypeError('Wrong input type \"' + args.constructor.name + '\" for args');\n        }\n    }\n    if (typeof callback !== 'function' && callback !== undefined) {\n        throw new TypeError('Wrong input type \"' + (callback !== null ? callback.constructor.name : 'null') + '\" for callback function');\n    }\n\n    // Using the raw multi command is only possible with this function\n    // If the command is not yet added to the client, the internal function should be called right away\n    // Otherwise we need to redirect the calls to make sure the internal functions don't get skipped\n    // The internal functions could actually be used for any non hooked function\n    // but this might change from time to time and at the moment there's no good way to distinguish them\n    // from each other, so let's just do it do it this way for the time being\n    if (command === 'multi' || typeof this[command] !== 'function') {\n        return this.internal_send_command(new Command(command, args, callback));\n    }\n    if (typeof callback === 'function') {\n        args = args.concat([callback]); // Prevent manipulating the input array\n    }\n    return this[command].apply(this, args);\n};\n\nRedisClient.prototype.end = function (flush) {\n    // Flush queue if wanted\n    if (flush) {\n        this.flush_and_error({\n            message: 'Connection forcefully ended and command aborted.',\n            code: 'NR_CLOSED'\n        });\n    } else if (arguments.length === 0) {\n        this.warn(\n            'Using .end() without the flush parameter is deprecated and throws from v.3.0.0 on.\\n' +\n            'Please check the doku (https://github.com/NodeRedis/node_redis) and explictly use flush.'\n        );\n    }\n    // Clear retry_timer\n    if (this.retry_timer) {\n        clearTimeout(this.retry_timer);\n        this.retry_timer = null;\n    }\n    this.stream.removeAllListeners();\n    this.stream.on('error', noop);\n    this.connected = false;\n    this.ready = false;\n    this.closing = true;\n    return this.stream.destroySoon();\n};\n\nRedisClient.prototype.unref = function () {\n    if (this.connected) {\n        debug(\"Unref'ing the socket connection\");\n        this.stream.unref();\n    } else {\n        debug('Not connected yet, will unref later');\n        this.once('connect', function () {\n            this.unref();\n        });\n    }\n};\n\nRedisClient.prototype.duplicate = function (options, callback) {\n    if (typeof options === 'function') {\n        callback = options;\n        options = null;\n    }\n    var existing_options = utils.clone(this.options);\n    options = utils.clone(options);\n    for (var elem in options) {\n        existing_options[elem] = options[elem];\n    }\n    var client = new RedisClient(existing_options);\n    client.selected_db = this.selected_db;\n    if (typeof callback === 'function') {\n        var ready_listener = function () {\n            callback(null, client);\n            client.removeAllListeners(error_listener);\n        };\n        var error_listener = function (err) {\n            callback(err);\n            client.end(true);\n        };\n        client.once('ready', ready_listener);\n        client.once('error', error_listener);\n        return;\n    }\n    return client;\n};\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/extendedApi.js?");

/***/ }),

/***/ "./node_modules/redis/lib/individualCommands.js":
/*!******************************************************!*\
  !*** ./node_modules/redis/lib/individualCommands.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/redis/lib/utils.js\");\nvar debug = __webpack_require__(/*! ./debug */ \"./node_modules/redis/lib/debug.js\");\nvar Multi = __webpack_require__(/*! ./multi */ \"./node_modules/redis/lib/multi.js\");\nvar Command = __webpack_require__(/*! ./command */ \"./node_modules/redis/lib/command.js\");\nvar no_password_is_set = /no password is set/;\nvar loading = /LOADING/;\nvar RedisClient = __webpack_require__(/*! ../ */ \"./node_modules/redis/index.js\").RedisClient;\n\n/********************************************************************************************\n Replace built-in redis functions\n\n The callback may be hooked as needed. The same does not apply to the rest of the function.\n State should not be set outside of the callback if not absolutly necessary.\n This is important to make sure it works the same as single command or in a multi context.\n To make sure everything works with the offline queue use the \"call_on_write\" function.\n This is going to be executed while writing to the stream.\n\n TODO: Implement individal command generation as soon as possible to prevent divergent code\n on single and multi calls!\n********************************************************************************************/\n\nRedisClient.prototype.multi = RedisClient.prototype.MULTI = function multi (args) {\n    var multi = new Multi(this, args);\n    multi.exec = multi.EXEC = multi.exec_transaction;\n    return multi;\n};\n\n// ATTENTION: This is not a native function but is still handled as a individual command as it behaves just the same as multi\nRedisClient.prototype.batch = RedisClient.prototype.BATCH = function batch (args) {\n    return new Multi(this, args);\n};\n\nfunction select_callback (self, db, callback) {\n    return function (err, res) {\n        if (err === null) {\n            // Store db in this.select_db to restore it on reconnect\n            self.selected_db = db;\n        }\n        utils.callback_or_emit(self, callback, err, res);\n    };\n}\n\nRedisClient.prototype.select = RedisClient.prototype.SELECT = function select (db, callback) {\n    return this.internal_send_command(new Command('select', [db], select_callback(this, db, callback)));\n};\n\nMulti.prototype.select = Multi.prototype.SELECT = function select (db, callback) {\n    this.queue.push(new Command('select', [db], select_callback(this._client, db, callback)));\n    return this;\n};\n\nRedisClient.prototype.monitor = RedisClient.prototype.MONITOR = function monitor (callback) {\n    // Use a individual command, as this is a special case that does not has to be checked for any other command\n    var self = this;\n    var call_on_write = function () {\n        // Activating monitor mode has to happen before Redis returned the callback. The monitor result is returned first.\n        // Therefore we expect the command to be properly processed. If this is not the case, it's not an issue either.\n        self.monitoring = true;\n    };\n    return this.internal_send_command(new Command('monitor', [], callback, call_on_write));\n};\n\n// Only works with batch, not in a transaction\nMulti.prototype.monitor = Multi.prototype.MONITOR = function monitor (callback) {\n    // Use a individual command, as this is a special case that does not has to be checked for any other command\n    if (this.exec !== this.exec_transaction) {\n        var self = this;\n        var call_on_write = function () {\n            self._client.monitoring = true;\n        };\n        this.queue.push(new Command('monitor', [], callback, call_on_write));\n        return this;\n    }\n    // Set multi monitoring to indicate the exec that it should abort\n    // Remove this \"hack\" as soon as Redis might fix this\n    this.monitoring = true;\n    return this;\n};\n\nfunction quit_callback (self, callback) {\n    return function (err, res) {\n        if (err && err.code === 'NR_CLOSED') {\n            // Pretent the quit command worked properly in this case.\n            // Either the quit landed in the offline queue and was flushed at the reconnect\n            // or the offline queue is deactivated and the command was rejected right away\n            // or the stream is not writable\n            // or while sending the quit, the connection ended / closed\n            err = null;\n            res = 'OK';\n        }\n        utils.callback_or_emit(self, callback, err, res);\n        if (self.stream.writable) {\n            // If the socket is still alive, kill it. This could happen if quit got a NR_CLOSED error code\n            self.stream.destroy();\n        }\n    };\n}\n\nRedisClient.prototype.QUIT = RedisClient.prototype.quit = function quit (callback) {\n    // TODO: Consider this for v.3\n    // Allow the quit command to be fired as soon as possible to prevent it landing in the offline queue.\n    // this.ready = this.offline_queue.length === 0;\n    var backpressure_indicator = this.internal_send_command(new Command('quit', [], quit_callback(this, callback)));\n    // Calling quit should always end the connection, no matter if there's a connection or not\n    this.closing = true;\n    this.ready = false;\n    return backpressure_indicator;\n};\n\n// Only works with batch, not in a transaction\nMulti.prototype.QUIT = Multi.prototype.quit = function quit (callback) {\n    var self = this._client;\n    var call_on_write = function () {\n        // If called in a multi context, we expect redis is available\n        self.closing = true;\n        self.ready = false;\n    };\n    this.queue.push(new Command('quit', [], quit_callback(self, callback), call_on_write));\n    return this;\n};\n\nfunction info_callback (self, callback) {\n    return function (err, res) {\n        if (res) {\n            var obj = {};\n            var lines = res.toString().split('\\r\\n');\n            var line, parts, sub_parts;\n\n            for (var i = 0; i < lines.length; i++) {\n                parts = lines[i].split(':');\n                if (parts[1]) {\n                    if (parts[0].indexOf('db') === 0) {\n                        sub_parts = parts[1].split(',');\n                        obj[parts[0]] = {};\n                        while (line = sub_parts.pop()) {\n                            line = line.split('=');\n                            obj[parts[0]][line[0]] = +line[1];\n                        }\n                    } else {\n                        obj[parts[0]] = parts[1];\n                    }\n                }\n            }\n            obj.versions = [];\n            if (obj.redis_version) {\n                obj.redis_version.split('.').forEach(function (num) {\n                    obj.versions.push(+num);\n                });\n            }\n            // Expose info key/vals to users\n            self.server_info = obj;\n        } else {\n            self.server_info = {};\n        }\n        utils.callback_or_emit(self, callback, err, res);\n    };\n}\n\n// Store info in this.server_info after each call\nRedisClient.prototype.info = RedisClient.prototype.INFO = function info (section, callback) {\n    var args = [];\n    if (typeof section === 'function') {\n        callback = section;\n    } else if (section !== undefined) {\n        args = Array.isArray(section) ? section : [section];\n    }\n    return this.internal_send_command(new Command('info', args, info_callback(this, callback)));\n};\n\nMulti.prototype.info = Multi.prototype.INFO = function info (section, callback) {\n    var args = [];\n    if (typeof section === 'function') {\n        callback = section;\n    } else if (section !== undefined) {\n        args = Array.isArray(section) ? section : [section];\n    }\n    this.queue.push(new Command('info', args, info_callback(this._client, callback)));\n    return this;\n};\n\nfunction auth_callback (self, pass, callback) {\n    return function (err, res) {\n        if (err) {\n            if (no_password_is_set.test(err.message)) {\n                self.warn('Warning: Redis server does not require a password, but a password was supplied.');\n                err = null;\n                res = 'OK';\n            } else if (loading.test(err.message)) {\n                // If redis is still loading the db, it will not authenticate and everything else will fail\n                debug('Redis still loading, trying to authenticate later');\n                setTimeout(function () {\n                    self.auth(pass, callback);\n                }, 100);\n                return;\n            }\n        }\n        utils.callback_or_emit(self, callback, err, res);\n    };\n}\n\nRedisClient.prototype.auth = RedisClient.prototype.AUTH = function auth (pass, callback) {\n    debug('Sending auth to ' + this.address + ' id ' + this.connection_id);\n\n    // Stash auth for connect and reconnect.\n    this.auth_pass = pass;\n    var ready = this.ready;\n    this.ready = ready || this.offline_queue.length === 0;\n    var tmp = this.internal_send_command(new Command('auth', [pass], auth_callback(this, pass, callback)));\n    this.ready = ready;\n    return tmp;\n};\n\n// Only works with batch, not in a transaction\nMulti.prototype.auth = Multi.prototype.AUTH = function auth (pass, callback) {\n    debug('Sending auth to ' + this.address + ' id ' + this.connection_id);\n\n    // Stash auth for connect and reconnect.\n    this.auth_pass = pass;\n    this.queue.push(new Command('auth', [pass], auth_callback(this._client, callback)));\n    return this;\n};\n\nRedisClient.prototype.client = RedisClient.prototype.CLIENT = function client () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0];\n        callback = arguments[1];\n    } else if (Array.isArray(arguments[1])) {\n        if (len === 3) {\n            callback = arguments[2];\n        }\n        len = arguments[1].length;\n        arr = new Array(len + 1);\n        arr[0] = arguments[0];\n        for (; i < len; i += 1) {\n            arr[i + 1] = arguments[1][i];\n        }\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this;\n    var call_on_write = undefined;\n    // CLIENT REPLY ON|OFF|SKIP\n    /* istanbul ignore next: TODO: Remove this as soon as Travis runs Redis 3.2 */\n    if (arr.length === 2 && arr[0].toString().toUpperCase() === 'REPLY') {\n        var reply_on_off = arr[1].toString().toUpperCase();\n        if (reply_on_off === 'ON' || reply_on_off === 'OFF' || reply_on_off === 'SKIP') {\n            call_on_write = function () {\n                self.reply = reply_on_off;\n            };\n        }\n    }\n    return this.internal_send_command(new Command('client', arr, callback, call_on_write));\n};\n\nMulti.prototype.client = Multi.prototype.CLIENT = function client () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0];\n        callback = arguments[1];\n    } else if (Array.isArray(arguments[1])) {\n        if (len === 3) {\n            callback = arguments[2];\n        }\n        len = arguments[1].length;\n        arr = new Array(len + 1);\n        arr[0] = arguments[0];\n        for (; i < len; i += 1) {\n            arr[i + 1] = arguments[1][i];\n        }\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this._client;\n    var call_on_write = undefined;\n    // CLIENT REPLY ON|OFF|SKIP\n    /* istanbul ignore next: TODO: Remove this as soon as Travis runs Redis 3.2 */\n    if (arr.length === 2 && arr[0].toString().toUpperCase() === 'REPLY') {\n        var reply_on_off = arr[1].toString().toUpperCase();\n        if (reply_on_off === 'ON' || reply_on_off === 'OFF' || reply_on_off === 'SKIP') {\n            call_on_write = function () {\n                self.reply = reply_on_off;\n            };\n        }\n    }\n    this.queue.push(new Command('client', arr, callback, call_on_write));\n    return this;\n};\n\nRedisClient.prototype.hmset = RedisClient.prototype.HMSET = function hmset () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0];\n        callback = arguments[1];\n    } else if (Array.isArray(arguments[1])) {\n        if (len === 3) {\n            callback = arguments[2];\n        }\n        len = arguments[1].length;\n        arr = new Array(len + 1);\n        arr[0] = arguments[0];\n        for (; i < len; i += 1) {\n            arr[i + 1] = arguments[1][i];\n        }\n    } else if (typeof arguments[1] === 'object' && (arguments.length === 2 || arguments.length === 3 && (typeof arguments[2] === 'function' || typeof arguments[2] === 'undefined'))) {\n        arr = [arguments[0]];\n        for (var field in arguments[1]) {\n            arr.push(field, arguments[1][field]);\n        }\n        callback = arguments[2];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    return this.internal_send_command(new Command('hmset', arr, callback));\n};\n\nMulti.prototype.hmset = Multi.prototype.HMSET = function hmset () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0];\n        callback = arguments[1];\n    } else if (Array.isArray(arguments[1])) {\n        if (len === 3) {\n            callback = arguments[2];\n        }\n        len = arguments[1].length;\n        arr = new Array(len + 1);\n        arr[0] = arguments[0];\n        for (; i < len; i += 1) {\n            arr[i + 1] = arguments[1][i];\n        }\n    } else if (typeof arguments[1] === 'object' && (arguments.length === 2 || arguments.length === 3 && (typeof arguments[2] === 'function' || typeof arguments[2] === 'undefined'))) {\n        arr = [arguments[0]];\n        for (var field in arguments[1]) {\n            arr.push(field, arguments[1][field]);\n        }\n        callback = arguments[2];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    this.queue.push(new Command('hmset', arr, callback));\n    return this;\n};\n\nRedisClient.prototype.subscribe = RedisClient.prototype.SUBSCRIBE = function subscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this;\n    var call_on_write = function () {\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    return this.internal_send_command(new Command('subscribe', arr, callback, call_on_write));\n};\n\nMulti.prototype.subscribe = Multi.prototype.SUBSCRIBE = function subscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this._client;\n    var call_on_write = function () {\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    this.queue.push(new Command('subscribe', arr, callback, call_on_write));\n    return this;\n};\n\nRedisClient.prototype.unsubscribe = RedisClient.prototype.UNSUBSCRIBE = function unsubscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this;\n    var call_on_write = function () {\n        // Pub sub has to be activated even if not in pub sub mode, as the return value is manipulated in the callback\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    return this.internal_send_command(new Command('unsubscribe', arr, callback, call_on_write));\n};\n\nMulti.prototype.unsubscribe = Multi.prototype.UNSUBSCRIBE = function unsubscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this._client;\n    var call_on_write = function () {\n        // Pub sub has to be activated even if not in pub sub mode, as the return value is manipulated in the callback\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    this.queue.push(new Command('unsubscribe', arr, callback, call_on_write));\n    return this;\n};\n\nRedisClient.prototype.psubscribe = RedisClient.prototype.PSUBSCRIBE = function psubscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this;\n    var call_on_write = function () {\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    return this.internal_send_command(new Command('psubscribe', arr, callback, call_on_write));\n};\n\nMulti.prototype.psubscribe = Multi.prototype.PSUBSCRIBE = function psubscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this._client;\n    var call_on_write = function () {\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    this.queue.push(new Command('psubscribe', arr, callback, call_on_write));\n    return this;\n};\n\nRedisClient.prototype.punsubscribe = RedisClient.prototype.PUNSUBSCRIBE = function punsubscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this;\n    var call_on_write = function () {\n        // Pub sub has to be activated even if not in pub sub mode, as the return value is manipulated in the callback\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    return this.internal_send_command(new Command('punsubscribe', arr, callback, call_on_write));\n};\n\nMulti.prototype.punsubscribe = Multi.prototype.PUNSUBSCRIBE = function punsubscribe () {\n    var arr,\n        len = arguments.length,\n        callback,\n        i = 0;\n    if (Array.isArray(arguments[0])) {\n        arr = arguments[0].slice(0);\n        callback = arguments[1];\n    } else {\n        len = arguments.length;\n        // The later should not be the average use case\n        if (len !== 0 && (typeof arguments[len - 1] === 'function' || typeof arguments[len - 1] === 'undefined')) {\n            len--;\n            callback = arguments[len];\n        }\n        arr = new Array(len);\n        for (; i < len; i += 1) {\n            arr[i] = arguments[i];\n        }\n    }\n    var self = this._client;\n    var call_on_write = function () {\n        // Pub sub has to be activated even if not in pub sub mode, as the return value is manipulated in the callback\n        self.pub_sub_mode = self.pub_sub_mode || self.command_queue.length + 1;\n    };\n    this.queue.push(new Command('punsubscribe', arr, callback, call_on_write));\n    return this;\n};\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/individualCommands.js?");

/***/ }),

/***/ "./node_modules/redis/lib/multi.js":
/*!*****************************************!*\
  !*** ./node_modules/redis/lib/multi.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Queue = __webpack_require__(/*! double-ended-queue */ \"./node_modules/double-ended-queue/js/deque.js\");\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/redis/lib/utils.js\");\nvar Command = __webpack_require__(/*! ./command */ \"./node_modules/redis/lib/command.js\");\n\nfunction Multi (client, args) {\n    this._client = client;\n    this.queue = new Queue();\n    var command, tmp_args;\n    if (args) { // Either undefined or an array. Fail hard if it's not an array\n        for (var i = 0; i < args.length; i++) {\n            command = args[i][0];\n            tmp_args = args[i].slice(1);\n            if (Array.isArray(command)) {\n                this[command[0]].apply(this, command.slice(1).concat(tmp_args));\n            } else {\n                this[command].apply(this, tmp_args);\n            }\n        }\n    }\n}\n\nfunction pipeline_transaction_command (self, command_obj, index) {\n    // Queueing is done first, then the commands are executed\n    var tmp = command_obj.callback;\n    command_obj.callback = function (err, reply) {\n        // Ignore the multi command. This is applied by node_redis and the user does not benefit by it\n        if (err && index !== -1) {\n            if (tmp) {\n                tmp(err);\n            }\n            err.position = index;\n            self.errors.push(err);\n        }\n        // Keep track of who wants buffer responses:\n        // By the time the callback is called the command_obj got the buffer_args attribute attached\n        self.wants_buffers[index] = command_obj.buffer_args;\n        command_obj.callback = tmp;\n    };\n    self._client.internal_send_command(command_obj);\n}\n\nMulti.prototype.exec_atomic = Multi.prototype.EXEC_ATOMIC = Multi.prototype.execAtomic = function exec_atomic (callback) {\n    if (this.queue.length < 2) {\n        return this.exec_batch(callback);\n    }\n    return this.exec(callback);\n};\n\nfunction multi_callback (self, err, replies) {\n    var i = 0, command_obj;\n\n    if (err) {\n        err.errors = self.errors;\n        if (self.callback) {\n            self.callback(err);\n            // Exclude connection errors so that those errors won't be emitted twice\n        } else if (err.code !== 'CONNECTION_BROKEN') {\n            self._client.emit('error', err);\n        }\n        return;\n    }\n\n    if (replies) {\n        while (command_obj = self.queue.shift()) {\n            if (replies[i] instanceof Error) {\n                var match = replies[i].message.match(utils.err_code);\n                // LUA script could return user errors that don't behave like all other errors!\n                if (match) {\n                    replies[i].code = match[1];\n                }\n                replies[i].command = command_obj.command.toUpperCase();\n                if (typeof command_obj.callback === 'function') {\n                    command_obj.callback(replies[i]);\n                }\n            } else {\n                // If we asked for strings, even in detect_buffers mode, then return strings:\n                replies[i] = self._client.handle_reply(replies[i], command_obj.command, self.wants_buffers[i]);\n                if (typeof command_obj.callback === 'function') {\n                    command_obj.callback(null, replies[i]);\n                }\n            }\n            i++;\n        }\n    }\n\n    if (self.callback) {\n        self.callback(null, replies);\n    }\n}\n\nMulti.prototype.exec_transaction = function exec_transaction (callback) {\n    if (this.monitoring || this._client.monitoring) {\n        var err = new RangeError(\n            'Using transaction with a client that is in monitor mode does not work due to faulty return values of Redis.'\n        );\n        err.command = 'EXEC';\n        err.code = 'EXECABORT';\n        return utils.reply_in_order(this._client, callback, err);\n    }\n    var self = this;\n    var len = self.queue.length;\n    self.errors = [];\n    self.callback = callback;\n    self._client.cork();\n    self.wants_buffers = new Array(len);\n    pipeline_transaction_command(self, new Command('multi', []), -1);\n    // Drain queue, callback will catch 'QUEUED' or error\n    for (var index = 0; index < len; index++) {\n        // The commands may not be shifted off, since they are needed in the result handler\n        pipeline_transaction_command(self, self.queue.get(index), index);\n    }\n\n    self._client.internal_send_command(new Command('exec', [], function (err, replies) {\n        multi_callback(self, err, replies);\n    }));\n    self._client.uncork();\n    return !self._client.should_buffer;\n};\n\nfunction batch_callback (self, cb, i) {\n    return function batch_callback (err, res) {\n        if (err) {\n            self.results[i] = err;\n            // Add the position to the error\n            self.results[i].position = i;\n        } else {\n            self.results[i] = res;\n        }\n        cb(err, res);\n    };\n}\n\nMulti.prototype.exec = Multi.prototype.EXEC = Multi.prototype.exec_batch = function exec_batch (callback) {\n    var self = this;\n    var len = self.queue.length;\n    var index = 0;\n    var command_obj;\n    if (len === 0) {\n        utils.reply_in_order(self._client, callback, null, []);\n        return !self._client.should_buffer;\n    }\n    self._client.cork();\n    if (!callback) {\n        while (command_obj = self.queue.shift()) {\n            self._client.internal_send_command(command_obj);\n        }\n        self._client.uncork();\n        return !self._client.should_buffer;\n    }\n    var callback_without_own_cb = function (err, res) {\n        if (err) {\n            self.results.push(err);\n            // Add the position to the error\n            var i = self.results.length - 1;\n            self.results[i].position = i;\n        } else {\n            self.results.push(res);\n        }\n        // Do not emit an error here. Otherwise each error would result in one emit.\n        // The errors will be returned in the result anyway\n    };\n    var last_callback = function (cb) {\n        return function (err, res) {\n            cb(err, res);\n            callback(null, self.results);\n        };\n    };\n    self.results = [];\n    while (command_obj = self.queue.shift()) {\n        if (typeof command_obj.callback === 'function') {\n            command_obj.callback = batch_callback(self, command_obj.callback, index);\n        } else {\n            command_obj.callback = callback_without_own_cb;\n        }\n        if (typeof callback === 'function' && index === len - 1) {\n            command_obj.callback = last_callback(command_obj.callback);\n        }\n        this._client.internal_send_command(command_obj);\n        index++;\n    }\n    self._client.uncork();\n    return !self._client.should_buffer;\n};\n\nmodule.exports = Multi;\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/multi.js?");

/***/ }),

/***/ "./node_modules/redis/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/redis/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// hgetall converts its replies to an Object. If the reply is empty, null is returned.\n// These function are only called with internal data and have therefore always the same instanceof X\nfunction replyToObject (reply) {\n    // The reply might be a string or a buffer if this is called in a transaction (multi)\n    if (reply.length === 0 || !(reply instanceof Array)) {\n        return null;\n    }\n    var obj = {};\n    for (var i = 0; i < reply.length; i += 2) {\n        obj[reply[i].toString('binary')] = reply[i + 1];\n    }\n    return obj;\n}\n\nfunction replyToStrings (reply) {\n    if (reply instanceof Buffer) {\n        return reply.toString();\n    }\n    if (reply instanceof Array) {\n        var res = new Array(reply.length);\n        for (var i = 0; i < reply.length; i++) {\n            // Recusivly call the function as slowlog returns deep nested replies\n            res[i] = replyToStrings(reply[i]);\n        }\n        return res;\n    }\n\n    return reply;\n}\n\nfunction print (err, reply) {\n    if (err) {\n        // A error always begins with Error:\n        console.log(err.toString());\n    } else {\n        console.log('Reply: ' + reply);\n    }\n}\n\nvar camelCase;\n// Deep clone arbitrary objects with arrays. Can't handle cyclic structures (results in a range error)\n// Any attribute with a non primitive value besides object and array will be passed by reference (e.g. Buffers, Maps, Functions)\n// All capital letters are going to be replaced with a lower case letter and a underscore infront of it\nfunction clone (obj) {\n    var copy;\n    if (Array.isArray(obj)) {\n        copy = new Array(obj.length);\n        for (var i = 0; i < obj.length; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n    if (Object.prototype.toString.call(obj) === '[object Object]') {\n        copy = {};\n        var elems = Object.keys(obj);\n        var elem;\n        while (elem = elems.pop()) {\n            if (elem === 'tls') { // special handle tls\n                copy[elem] = obj[elem];\n                continue;\n            }\n            // Accept camelCase options and convert them to snake_case\n            var snake_case = elem.replace(/[A-Z][^A-Z]/g, '_$&').toLowerCase();\n            // If camelCase is detected, pass it to the client, so all variables are going to be camelCased\n            // There are no deep nested options objects yet, but let's handle this future proof\n            if (snake_case !== elem.toLowerCase()) {\n                camelCase = true;\n            }\n            copy[snake_case] = clone(obj[elem]);\n        }\n        return copy;\n    }\n    return obj;\n}\n\nfunction convenienceClone (obj) {\n    camelCase = false;\n    obj = clone(obj) || {};\n    if (camelCase) {\n        obj.camel_case = true;\n    }\n    return obj;\n}\n\nfunction callbackOrEmit (self, callback, err, res) {\n    if (callback) {\n        callback(err, res);\n    } else if (err) {\n        self.emit('error', err);\n    }\n}\n\nfunction replyInOrder (self, callback, err, res, queue) {\n    // If the queue is explicitly passed, use that, otherwise fall back to the offline queue first,\n    // as there might be commands in both queues at the same time\n    var command_obj;\n    /* istanbul ignore if: TODO: Remove this as soon as we test Redis 3.2 on travis */\n    if (queue) {\n        command_obj = queue.peekBack();\n    } else {\n        command_obj = self.offline_queue.peekBack() || self.command_queue.peekBack();\n    }\n    if (!command_obj) {\n        process.nextTick(function () {\n            callbackOrEmit(self, callback, err, res);\n        });\n    } else {\n        var tmp = command_obj.callback;\n        command_obj.callback = tmp ?\n            function (e, r) {\n                tmp(e, r);\n                callbackOrEmit(self, callback, err, res);\n            } :\n            function (e, r) {\n                if (e) {\n                    self.emit('error', e);\n                }\n                callbackOrEmit(self, callback, err, res);\n            };\n    }\n}\n\nmodule.exports = {\n    reply_to_strings: replyToStrings,\n    reply_to_object: replyToObject,\n    print: print,\n    err_code: /^([A-Z]+)\\s+(.+)$/,\n    monitor_regex: /^[0-9]{10,11}\\.[0-9]+ \\[[0-9]+ .+\\]( \".+?\")+$/,\n    clone: convenienceClone,\n    callback_or_emit: callbackOrEmit,\n    reply_in_order: replyInOrder\n};\n\n\n//# sourceURL=webpack:///./node_modules/redis/lib/utils.js?");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"buffer\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack:///./node_modules/safe-buffer/index.js?");

/***/ }),

/***/ "./node_modules/uid-safe/index.js":
/*!****************************************!*\
  !*** ./node_modules/uid-safe/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * uid-safe\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar randomBytes = __webpack_require__(/*! random-bytes */ \"./node_modules/random-bytes/index.js\")\n\n/**\n * Module variables.\n * @private\n */\n\nvar EQUAL_END_REGEXP = /=+$/\nvar PLUS_GLOBAL_REGEXP = /\\+/g\nvar SLASH_GLOBAL_REGEXP = /\\//g\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = uid\nmodule.exports.sync = uidSync\n\n/**\n * Create a unique ID.\n *\n * @param {number} length\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction uid (length, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateUid(length, callback)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    generateUid(length, function onUid (err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Create a unique ID sync.\n *\n * @param {number} length\n * @return {string}\n * @public\n */\n\nfunction uidSync (length) {\n  return toString(randomBytes.sync(length))\n}\n\n/**\n * Generate a unique ID string.\n *\n * @param {number} length\n * @param {function} callback\n * @private\n */\n\nfunction generateUid (length, callback) {\n  randomBytes(length, function (err, buf) {\n    if (err) return callback(err)\n    callback(null, toString(buf))\n  })\n}\n\n/**\n * Change a Buffer into a string.\n *\n * @param {Buffer} buf\n * @return {string}\n * @private\n */\n\nfunction toString (buf) {\n  return buf.toString('base64')\n    .replace(EQUAL_END_REGEXP, '')\n    .replace(PLUS_GLOBAL_REGEXP, '-')\n    .replace(SLASH_GLOBAL_REGEXP, '_')\n}\n\n\n//# sourceURL=webpack:///./node_modules/uid-safe/index.js?");

/***/ }),

/***/ "./node_modules/vary/index.js":
/*!************************************!*\
  !*** ./node_modules/vary/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/vary/index.js?");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"assert\");\n\n//# sourceURL=webpack:///external_%22assert%22?");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"buffer\");\n\n//# sourceURL=webpack:///external_%22buffer%22?");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"crypto\");\n\n//# sourceURL=webpack:///external_%22crypto%22?");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"events\");\n\n//# sourceURL=webpack:///external_%22events%22?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express\");\n\n//# sourceURL=webpack:///external_%22express%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"net\");\n\n//# sourceURL=webpack:///external_%22net%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"string_decoder\");\n\n//# sourceURL=webpack:///external_%22string_decoder%22?");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"tls\");\n\n//# sourceURL=webpack:///external_%22tls%22?");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"tty\");\n\n//# sourceURL=webpack:///external_%22tty%22?");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"url\");\n\n//# sourceURL=webpack:///external_%22url%22?");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"util\");\n\n//# sourceURL=webpack:///external_%22util%22?");

/***/ }),

/***/ "ws":
/*!*********************!*\
  !*** external "ws" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"ws\");\n\n//# sourceURL=webpack:///external_%22ws%22?");

/***/ })

/******/ })));